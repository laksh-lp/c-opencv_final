<!DOCTYPE html>
<!-- saved from url=(0080)https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html -->
<html class="v2" dir="ltr" xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://www.google.com/2005/gml/b" xmlns:data="http://www.google.com/2005/gml/data" xmlns:expr="http://www.google.com/2005/gml/expr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link href="./video_files/2437439463-css_bundle_v2.css" rel="stylesheet" type="text/css">
<script src="./video_files/ca-pub-2548018011991689.js"></script><script src="./video_files/cb=gapi.loaded_1" async=""></script><script src="./video_files/cb=gapi.loaded_0" async=""></script><script src="./video_files/osd.js"></script><script src="./video_files/ca-pub-2548018011991689.js"></script><script id="facebook-jssdk" src="./video_files/all.js"></script><script async="async" src="./video_files/adsbygoogle.js"></script>
<script>
  (adsbygoogle = window.adsbygoogle || []).push({
    google_ad_client: "ca-pub-2548018011991689",
    enable_page_level_ads: true
  });
</script>
<meta content="B7283615A9B1B25B1BDA8BD2A5468951" name="msvalidate.01">
<meta content="Shermal Ruwantha Fernando" name="author">
<meta content="IE=EmulateIE7" http-equiv="X-UA-Compatible">
<meta content="width=1100" name="viewport">

<meta content="blogger" name="generator">
<link href="https://www.opencv-srf.com/favicon.ico" rel="icon" type="image/x-icon">
<link href="https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html" rel="canonical">
<link rel="alternate" type="application/atom+xml" title="OpenCV Tutorial C++ - Atom" href="https://www.opencv-srf.com/feeds/posts/default">
<link rel="alternate" type="application/rss+xml" title="OpenCV Tutorial C++ - RSS" href="https://www.opencv-srf.com/feeds/posts/default?alt=rss">
<link rel="service.post" type="application/atom+xml" title="OpenCV Tutorial C++ - Atom" href="https://www.blogger.com/feeds/1182128440772477840/posts/default">

<link rel="alternate" type="application/atom+xml" title="OpenCV Tutorial C++ - Atom" href="https://www.opencv-srf.com/feeds/6871903895490733007/comments/default">
<!--[if IE]><script type="text/javascript" src="https://www.blogger.com/static/v1/jsbin/3658603751-ieretrofit.js"></script>
<![endif]-->
<link href="http://4.bp.blogspot.com/-r36OpIdjPWE/UDPMJ2kPFZI/AAAAAAAAAPs/-eO4W_XeDo0/s640/FindingContours.png" rel="image_src">
<meta content="https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html" property="og:url">
<meta content="Shape Detection &amp; Tracking using Contours" property="og:title">
<meta content="OpenCV Tutorials for beginners of image processing and computer vision. Learn basic concepts with lots of OpenCV C++ examples." property="og:description">
<meta content="//4.bp.blogspot.com/-r36OpIdjPWE/UDPMJ2kPFZI/AAAAAAAAAPs/-eO4W_XeDo0/w1200-h630-p-k-no-nu/FindingContours.png" property="og:image">
<!--[if IE]> <script> (function() { var html5 = ("abbr,article,aside,audio,canvas,datalist,details," + "figure,footer,header,hgroup,mark,menu,meter,nav,output," + "progress,section,time,video").split(','); for (var i = 0; i < html5.length; i++) { document.createElement(html5[i]); } try { document.execCommand('BackgroundImageCache', false, true); } catch(e) {} })(); </script> <![endif]-->
<title>Shape Detection &amp; Tracking using Contours - OpenCV Tutorial C++</title>
<link rel="stylesheet" type="text/css" href="./video_files/sons-of-obsidian.css">
<style id="page-skin-1" type="text/css"><!--
/*
-----------------------------------------------
Blogger Template Style
Name:     Simple
Designer: Josh Peterson
URL:      www.noaesthetic.com
----------------------------------------------- */
/* Variable definitions
====================
<Variable name="keycolor" description="Main Color" type="color" default="#66bbdd"/>
<Group description="Page Text" selector="body">
<Variable name="body.font" description="Font" type="font"
default="normal normal 12px Arial, Tahoma, Helvetica, FreeSans, sans-serif"/>
<Variable name="body.text.color" description="Text Color" type="color" default="#222222"/>
</Group>
<Group description="Backgrounds" selector=".body-fauxcolumns-outer">
<Variable name="body.background.color" description="Outer Background" type="color" default="#66bbdd"/>
<Variable name="content.background.color" description="Main Background" type="color" default="#ffffff"/>
<Variable name="header.background.color" description="Header Background" type="color" default="transparent"/>
</Group>
<Group description="Links" selector=".main-outer">
<Variable name="link.color" description="Link Color" type="color" default="#2288bb"/>
<Variable name="link.visited.color" description="Visited Color" type="color" default="#888888"/>
<Variable name="link.hover.color" description="Hover Color" type="color" default="#33aaff"/>
</Group>
<Group description="Blog Title" selector=".header h1">
<Variable name="header.font" description="Font" type="font"
default="normal normal 60px Arial, Tahoma, Helvetica, FreeSans, sans-serif"/>
<Variable name="header.text.color" description="Title Color" type="color" default="#3399bb" />
</Group>
<Group description="Blog Description" selector=".header .description">
<Variable name="description.text.color" description="Description Color" type="color"
default="#777777" />
</Group>
<Group description="Tabs Text" selector=".tabs-inner .widget li a">
<Variable name="tabs.font" description="Font" type="font"
default="normal normal 14px Arial, Tahoma, Helvetica, FreeSans, sans-serif"/>
<Variable name="tabs.text.color" description="Text Color" type="color" default="#999999"/>
<Variable name="tabs.selected.text.color" description="Selected Color" type="color" default="#000000"/>
</Group>
<Group description="Tabs Background" selector=".tabs-outer .PageList">
<Variable name="tabs.background.color" description="Background Color" type="color" default="#f5f5f5"/>
<Variable name="tabs.selected.background.color" description="Selected Color" type="color" default="#eeeeee"/>
</Group>
<Group description="Post Title" selector="h3.post-title, .comments h4">
<Variable name="post.title.font" description="Font" type="font"
default="normal normal 22px Arial, Tahoma, Helvetica, FreeSans, sans-serif"/>
</Group>
<Group description="Date Header" selector=".date-header">
<Variable name="date.header.color" description="Text Color" type="color"
default="#222222"/>
<Variable name="date.header.background.color" description="Background Color" type="color"
default="transparent"/>
</Group>
<Group description="Post Footer" selector=".post-footer">
<Variable name="post.footer.text.color" description="Text Color" type="color" default="#666666"/>
<Variable name="post.footer.background.color" description="Background Color" type="color"
default="#f9f9f9"/>
<Variable name="post.footer.border.color" description="Shadow Color" type="color" default="#eeeeee"/>
</Group>
<Group description="Gadgets" selector="h2">
<Variable name="widget.title.font" description="Title Font" type="font"
default="normal bold 11px Arial, Tahoma, Helvetica, FreeSans, sans-serif"/>
<Variable name="widget.title.text.color" description="Title Color" type="color" default="#000000"/>
<Variable name="widget.alternate.text.color" description="Alternate Color" type="color" default="#999999"/>
</Group>
<Group description="Images" selector=".main-inner">
<Variable name="image.background.color" description="Background Color" type="color" default="#ffffff"/>
<Variable name="image.border.color" description="Border Color" type="color" default="#eeeeee"/>
<Variable name="image.text.color" description="Caption Text Color" type="color" default="#222222"/>
</Group>
<Group description="Accents" selector=".content-inner">
<Variable name="body.rule.color" description="Separator Line Color" type="color" default="#eeeeee"/>
<Variable name="tabs.border.color" description="Tabs Border Color" type="color" default="#eeeeee"/>
</Group>
<Variable name="body.background" description="Body Background" type="background"
color="#66bbdd" default="$(color) none repeat scroll top left"/>
<Variable name="body.background.override" description="Body Background Override" type="string" default=""/>
<Variable name="body.background.gradient.cap" description="Body Gradient Cap" type="url"
default="url(http://www.blogblog.com/1kt/simple/gradients_light.png)"/>
<Variable name="body.background.gradient.tile" description="Body Gradient Tile" type="url"
default="url(http://www.blogblog.com/1kt/simple/body_gradient_tile_light.png)"/>
<Variable name="content.background.color.selector" description="Content Background Color Selector" type="string" default=".content-inner"/>
<Variable name="content.padding" description="Content Padding" type="length" default="10px"/>
<Variable name="content.padding.horizontal" description="Content Horizontal Padding" type="length" default="10px"/>
<Variable name="content.shadow.spread" description="Content Shadow Spread" type="length" default="40px"/>
<Variable name="content.shadow.spread.webkit" description="Content Shadow Spread (WebKit)" type="length" default="5px"/>
<Variable name="content.shadow.spread.ie" description="Content Shadow Spread (IE)" type="length" default="10px"/>
<Variable name="main.border.width" description="Main Border Width" type="length" default="0"/>
<Variable name="header.background.gradient" description="Header Gradient" type="url" default="none"/>
<Variable name="header.shadow.offset.left" description="Header Shadow Offset Left" type="length" default="-1px"/>
<Variable name="header.shadow.offset.top" description="Header Shadow Offset Top" type="length" default="-1px"/>
<Variable name="header.shadow.spread" description="Header Shadow Spread" type="length" default="1px"/>
<Variable name="header.padding" description="Header Padding" type="length" default="30px"/>
<Variable name="header.border.size" description="Header Border Size" type="length" default="1px"/>
<Variable name="header.bottom.border.size" description="Header Bottom Border Size" type="length" default="1px"/>
<Variable name="header.border.horizontalsize" description="Header Horizontal Border Size" type="length" default="0"/>
<Variable name="description.text.size" description="Description Text Size" type="string" default="140%"/>
<Variable name="tabs.margin.top" description="Tabs Margin Top" type="length" default="0" />
<Variable name="tabs.margin.side" description="Tabs Side Margin" type="length" default="30px" />
<Variable name="tabs.background.gradient" description="Tabs Background Gradient" type="url"
default="url(http://www.blogblog.com/1kt/simple/gradients_light.png)"/>
<Variable name="tabs.border.width" description="Tabs Border Width" type="length" default="1px"/>
<Variable name="tabs.bevel.border.width" description="Tabs Bevel Border Width" type="length" default="1px"/>
<Variable name="date.header.padding" description="Date Header Padding" type="string" default="inherit"/>
<Variable name="date.header.letterspacing" description="Date Header Letter Spacing" type="string" default="inherit"/>
<Variable name="date.header.margin" description="Date Header Margin" type="string" default="inherit"/>
<Variable name="post.margin.bottom" description="Post Bottom Margin" type="length" default="25px"/>
<Variable name="image.border.small.size" description="Image Border Small Size" type="length" default="2px"/>
<Variable name="image.border.large.size" description="Image Border Large Size" type="length" default="5px"/>
<Variable name="page.width.selector" description="Page Width Selector" type="string" default=".region-inner"/>
<Variable name="page.width" description="Page Width" type="string" default="auto"/>
<Variable name="main.section.margin" description="Main Section Margin" type="length" default="15px"/>
<Variable name="main.padding" description="Main Padding" type="length" default="15px"/>
<Variable name="main.padding.top" description="Main Padding Top" type="length" default="30px"/>
<Variable name="main.padding.bottom" description="Main Padding Bottom" type="length" default="30px"/>
<Variable name="paging.background"
color="#ffffff"
description="Background of blog paging area" type="background"
default="transparent none no-repeat scroll top center"/>
<Variable name="footer.bevel" description="Bevel border length of footer" type="length" default="0"/>
<Variable name="mobile.background.overlay" description="Mobile Background Overlay" type="string"
default="transparent none repeat scroll top left"/>
<Variable name="mobile.background.size" description="Mobile Background Size" type="string" default="auto"/>
<Variable name="mobile.button.color" description="Mobile Button Color" type="color" default="#ffffff" />
<Variable name="startSide" description="Side where text starts in blog language" type="automatic" default="left"/>
<Variable name="endSide" description="Side where text ends in blog language" type="automatic" default="right"/>
*/
/* Content
----------------------------------------------- */
body {
font: normal normal 12px Arial, Tahoma, Helvetica, FreeSans, sans-serif;
color: #222222;
background: #ffffff url(//themes.googleusercontent.com/image?id=1N3a-kmJ4ABC9Vn7ix7pZVv7tOBByyNMJO2BIiT6-2HKT23Cb3zL6Ev1OeMzfiMVbOCeM) no-repeat fixed top center /* Credit: 5ugarless (http://www.istockphoto.com/googleimages.php?id=5682784&platform=blogger) */;
padding: 0 40px 40px 40px;
}
html body .region-inner {
min-width: 0;
max-width: 100%;
width: auto;
}
a:link {
text-decoration:none;
color: #2187bb;
}
a:visited {
text-decoration:none;
color: #888888;
}
a:hover {
text-decoration:underline;
color: #32aaff;
}
.body-fauxcolumn-outer .fauxcolumn-inner {
background: transparent none repeat scroll top left;
_background-image: none;
}
.body-fauxcolumn-outer .cap-top {
position: absolute;
z-index: 1;
height: 400px;
width: 100%;
background: #ffffff url(//themes.googleusercontent.com/image?id=1N3a-kmJ4ABC9Vn7ix7pZVv7tOBByyNMJO2BIiT6-2HKT23Cb3zL6Ev1OeMzfiMVbOCeM) no-repeat fixed top center /* Credit: 5ugarless (http://www.istockphoto.com/googleimages.php?id=5682784&platform=blogger) */;
}
.body-fauxcolumn-outer .cap-top .cap-left {
width: 100%;
background: transparent none repeat-x scroll top left;
_background-image: none;
}
.content-outer {
-moz-box-shadow: 0 0 40px rgba(0, 0, 0, .15);
-webkit-box-shadow: 0 0 5px rgba(0, 0, 0, .15);
-goog-ms-box-shadow: 0 0 10px #333333;
box-shadow: 0 0 40px rgba(0, 0, 0, .15);
margin-bottom: 1px;
}
.content-inner {
padding: 10px 10px;
}
.content-inner {
background-color: #ffffff;
}
/* Header
----------------------------------------------- */
.header-outer {
background: transparent none repeat-x scroll 0 -400px;
_background-image: none;
}
.Header h1 {
font: normal normal 60px Arial, Tahoma, Helvetica, FreeSans, sans-serif;
color: #3299bb;
text-shadow: -1px -1px 1px rgba(0, 0, 0, .2);
}
.Header h1 a {
color: #3299bb;
}
.Header .description {
font-size: 140%;
color: #777777;
}
.header-inner .Header .titlewrapper {
padding: 22px 30px;
}
.header-inner .Header .descriptionwrapper {
padding: 0 30px;
}
/* Tabs
----------------------------------------------- */
.tabs-inner .section:first-child {
border-top: 1px solid #eeeeee;
}
.tabs-inner .section:first-child ul {
margin-top: -1px;
border-top: 1px solid #eeeeee;
border-left: 0 solid #eeeeee;
border-right: 0 solid #eeeeee;
}
.tabs-inner .widget ul {
background: #f5f5f5 url(//www.blogblog.com/1kt/simple/gradients_light.png) repeat-x scroll 0 -800px;
_background-image: none;
border-bottom: 1px solid #eeeeee;
margin-top: 0;
margin-left: -30px;
margin-right: -30px;
}
.tabs-inner .widget li a {
display: inline-block;
padding: .6em 1em;
font: normal normal 14px Arial, Tahoma, Helvetica, FreeSans, sans-serif;
color: #999999;
border-left: 1px solid #ffffff;
border-right: 1px solid #eeeeee;
}
.tabs-inner .widget li:first-child a {
border-left: none;
}
.tabs-inner .widget li.selected a, .tabs-inner .widget li a:hover {
color: #000000;
background-color: #eeeeee;
text-decoration: none;
}
/* Columns
----------------------------------------------- */
.main-outer {
border-top: 0 solid #eeeeee;
}
.fauxcolumn-left-outer .fauxcolumn-inner {
border-right: 1px solid #eeeeee;
}
.fauxcolumn-right-outer .fauxcolumn-inner {
border-left: 1px solid #eeeeee;
}
/* Headings
----------------------------------------------- */
h2 {
margin: 0 0 1em 0;
font: normal bold 11px Arial, Tahoma, Helvetica, FreeSans, sans-serif;
color: #000000;
text-transform: uppercase;
}
/* Widgets
----------------------------------------------- */
.widget .zippy {
color: #999999;
text-shadow: 2px 2px 1px rgba(0, 0, 0, .1);
}
.widget .popular-posts ul {
list-style: none;
}
/* Posts
----------------------------------------------- */
.date-header span {
background-color: transparent;
color: #222222;
padding: inherit;
letter-spacing: inherit;
margin: inherit;
}
.main-inner {
padding-top: 30px;
padding-bottom: 30px;
}
.main-inner .column-center-inner {
padding: 0 15px;
}
.main-inner .column-center-inner .section {
margin: 0 15px;
}
.post {
margin: 0 0 25px 0;
}
h3.post-title, .comments h4 {
font: normal bold 30px Arial, Tahoma, Helvetica, FreeSans, sans-serif;
margin: .75em 0 0;
}
.post-body {
font-size: 110%;
line-height: 1.4;
position: relative;
}
.post-body img, .post-body .tr-caption-container, .Profile img, .Image img,
.BlogList .item-thumbnail img {
padding: 2px;
background: #ffffff;
border: 1px solid #eeeeee;
-moz-box-shadow: 1px 1px 5px rgba(0, 0, 0, .1);
-webkit-box-shadow: 1px 1px 5px rgba(0, 0, 0, .1);
box-shadow: 1px 1px 5px rgba(0, 0, 0, .1);
}
.post-body img, .post-body .tr-caption-container {
padding: 5px;
}
.post-body .tr-caption-container {
color: #222222;
}
.post-body .tr-caption-container img {
padding: 0;
background: transparent;
border: none;
-moz-box-shadow: 0 0 0 rgba(0, 0, 0, .1);
-webkit-box-shadow: 0 0 0 rgba(0, 0, 0, .1);
box-shadow: 0 0 0 rgba(0, 0, 0, .1);
}
.post-header {
margin: 0 0 1.5em;
line-height: 1.6;
font-size: 90%;
}
.post-footer {
margin: 20px -2px 0;
padding: 5px 10px;
color: #666666;
background-color: #f9f9f9;
border-bottom: 1px solid #eeeeee;
line-height: 1.6;
font-size: 90%;
}
#comments .comment-author {
padding-top: 1.5em;
border-top: 1px solid #eeeeee;
background-position: 0 1.5em;
}
#comments .comment-author:first-child {
padding-top: 0;
border-top: none;
}
.avatar-image-container {
margin: .2em 0 0;
}
#comments .avatar-image-container img {
border: 1px solid #eeeeee;
}
/* Accents
---------------------------------------------- */
.section-columns td.columns-cell {
border-left: 1px solid #eeeeee;
}
.blog-pager {
background: transparent none no-repeat scroll top center;
}
.blog-pager-older-link, .home-link,
.blog-pager-newer-link {
background-color: #ffffff;
padding: 5px;
}
.footer-outer {
border-top: 0 dashed #bbbbbb;
}
/* Mobile
----------------------------------------------- */
body.mobile  {
background-size: auto;
}
.mobile .body-fauxcolumn-outer {
background: transparent none repeat scroll top left;
}
.mobile .body-fauxcolumn-outer .cap-top {
background-size: 100% auto;
}
.mobile .content-outer {
-webkit-box-shadow: 0 0 3px rgba(0, 0, 0, .15);
box-shadow: 0 0 3px rgba(0, 0, 0, .15);
padding: 0 40px;
}
body.mobile .AdSense {
margin: 0 -40px;
}
.mobile .tabs-inner .widget ul {
margin-left: 0;
margin-right: 0;
}
.mobile .post {
margin: 0;
}
.mobile .main-inner .column-center-inner .section {
margin: 0;
}
.mobile .date-header span {
padding: 0.1em 10px;
margin: 0 -10px;
}
.mobile h3.post-title {
margin: 0;
}
.mobile .blog-pager {
background: transparent none no-repeat scroll top center;
}
.mobile .footer-outer {
border-top: none;
}
.mobile .main-inner, .mobile .footer-inner {
background-color: #ffffff;
}
.mobile-index-contents {
color: #222222;
}
.mobile-link-button {
background-color: #2187bb;
}
.mobile-link-button a:link, .mobile-link-button a:visited {
color: #ffffff;
}
.mobile .tabs-inner .section:first-child {
border-top: none;
}
.mobile .tabs-inner .PageList .widget-content {
background-color: #eeeeee;
color: #000000;
border-top: 1px solid #eeeeee;
border-bottom: 1px solid #eeeeee;
}
.mobile .tabs-inner .PageList .widget-content .pagelist-arrow {
border-left: 1px solid #eeeeee;
}

--></style><link rel="preload" href="./video_files/integrator.js" as="script"><script type="text/javascript" src="./video_files/integrator.js"></script><link rel="preload" href="./video_files/integrator(1).js" as="script"><script type="text/javascript" src="./video_files/integrator(1).js"></script>
<style id="template-skin-1" type="text/css"><!--
body {
min-width: 1250px;
}
.content-outer, .content-fauxcolumn-outer, .region-inner {
min-width: 1250px;
max-width: 1250px;
_width: 1250px;
}
.main-inner .columns {
padding-left: 350px;
padding-right: 0px;
}
.main-inner .fauxcolumn-center-outer {
left: 350px;
right: 0px;
/* IE6 does not respect left and right together */
_width: expression(this.parentNode.offsetWidth -
parseInt("350px") -
parseInt("0px") + 'px');
}
.main-inner .fauxcolumn-left-outer {
width: 350px;
}
.main-inner .fauxcolumn-right-outer {
width: 0px;
}
.main-inner .column-left-outer {
width: 350px;
right: 100%;
margin-left: -350px;
}
.main-inner .column-right-outer {
width: 0px;
margin-right: -0px;
}
#layout {
min-width: 0;
}
#layout .content-outer {
min-width: 0;
width: 800px;
}
#layout .region-inner {
min-width: 0;
width: auto;
}
--></style>
<link href="./video_files/authorization.css" media="all" onload="if(media!=&#39;all&#39;)media=&#39;all&#39;" rel="stylesheet"><noscript>&lt;link href='https://www.blogger.com/dyn-css/authorization.css?targetBlogID=1182128440772477840&amp;amp;zx=5aeadf3f-940f-4030-a84f-79c9a7906530' rel='stylesheet'/&gt;</noscript>
<style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_reposition{overflow:hidden;position:relative}.fb_invisible{display:none}.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}.fb_link img{border:none}@keyframes fb_transform{from{opacity:0;transform:scale(.95)}to{opacity:1;transform:scale(1)}}.fb_animate{animation:fb_transform .3s forwards}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}.fb_reset .fb_dialog_legacy{overflow:visible}.fb_dialog_advanced{padding:10px;border-radius:8px}.fb_dialog_content{background:#fff;color:#333}.fb_dialog_close_icon{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px}.fb_dialog_mobile .fb_dialog_close_icon{top:5px;left:5px;right:auto}.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}.fb_dialog_close_icon:hover{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent}.fb_dialog_close_icon:active{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent}.fb_dialog_loader{background-color:#f6f7f9;border:1px solid #606060;font-size:24px;padding:20px}.fb_dialog_top_left,.fb_dialog_top_right,.fb_dialog_bottom_left,.fb_dialog_bottom_right{height:10px;width:10px;overflow:hidden;position:absolute}.fb_dialog_top_left{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 0;left:-10px;top:-10px}.fb_dialog_top_right{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -10px;right:-10px;top:-10px}.fb_dialog_bottom_left{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -20px;bottom:-10px;left:-10px}.fb_dialog_bottom_right{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -30px;right:-10px;bottom:-10px}.fb_dialog_vert_left,.fb_dialog_vert_right,.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{position:absolute;background:#525252;filter:alpha(opacity=70);opacity:.7}.fb_dialog_vert_left,.fb_dialog_vert_right{width:10px;height:100%}.fb_dialog_vert_left{margin-left:-10px}.fb_dialog_vert_right{right:0;margin-right:-10px}.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{width:100%;height:10px}.fb_dialog_horiz_top{margin-top:-10px}.fb_dialog_horiz_bottom{bottom:0;margin-bottom:-10px}.fb_dialog_iframe{line-height:0}.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #365899;color:#fff;font-size:14px;font-weight:bold;margin:0}.fb_dialog_content .dialog_title>span{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yd/r/Cou7n-nqK52.gif) no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}body.fb_hidden{-webkit-transform:none;height:100%;margin:0;overflow:visible;position:absolute;top:-10000px;left:0;width:100%}.fb_dialog.fb_dialog_mobile.loading{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ya/r/3rhSv5V8j3o.gif) white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}.fb_dialog.fb_dialog_mobile.loading.centered{width:auto;height:auto;min-height:initial;min-width:initial;background:none}.fb_dialog.fb_dialog_mobile.loading.centered #fb_dialog_loader_spinner{width:100%}.fb_dialog.fb_dialog_mobile.loading.centered .fb_dialog_content{background:none}.loading.centered #fb_dialog_loader_close{color:#fff;display:block;padding-top:20px;clear:both;font-size:18px}#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .45);position:absolute;bottom:0;left:0;right:0;top:0;width:100%;min-height:100%;z-index:10000}#fb-root #fb_dialog_ipad_overlay.hidden{display:none}.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}.fb_dialog_content .dialog_header{-webkit-box-shadow:white 0 1px 1px -1px inset;background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#738ABA), to(#2C4987));border-bottom:1px solid;border-color:#1d4088;color:#fff;font:14px Helvetica, sans-serif;font-weight:bold;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}.fb_dialog_content .dialog_header table{-webkit-font-smoothing:subpixel-antialiased;height:43px;width:100%}.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px}.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px}.fb_dialog_content .touchable_button{background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#4966A6), color-stop(.5, #355492), to(#2A4887));border:1px solid #29487d;-webkit-background-clip:padding-box;-webkit-border-radius:3px;-webkit-box-shadow:rgba(0, 0, 0, .117188) 0 1px 1px inset, rgba(255, 255, 255, .167969) 0 1px 0;display:inline-block;margin-top:3px;max-width:85px;line-height:18px;padding:4px 12px;position:relative}.fb_dialog_content .dialog_header .touchable_button input{border:none;background:none;color:#fff;font:12px Helvetica, sans-serif;font-weight:bold;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}.fb_dialog_content .dialog_content{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #555;border-bottom:0;border-top:0;height:150px}.fb_dialog_content .dialog_footer{background:#f6f7f9;border:1px solid #555;border-top-color:#ccc;height:40px}#fb_dialog_loader_close{float:left}.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}#fb_dialog_loader_spinner{animation:rotateSpinner 1.2s linear infinite;background-color:transparent;background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yD/r/t-wz8gw1xG1.png);background-repeat:no-repeat;background-position:50% 50%;height:24px;width:24px}@keyframes rotateSpinner{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
.fb_iframe_widget{display:inline-block;position:relative}.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}.fb_iframe_widget iframe{position:absolute}.fb_iframe_widget_fluid_desktop,.fb_iframe_widget_fluid_desktop span,.fb_iframe_widget_fluid_desktop iframe{max-width:100%}.fb_iframe_widget_fluid_desktop iframe{min-width:220px;position:relative}.fb_iframe_widget_lift{z-index:1}.fb_hide_iframes iframe{position:relative;left:-10000px}.fb_iframe_widget_loader{position:relative;display:inline-block}.fb_iframe_widget_fluid{display:inline}.fb_iframe_widget_fluid span{width:100%}.fb_iframe_widget_loader iframe{min-height:32px;z-index:2;zoom:1}.fb_iframe_widget_loader .FB_Loader{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat;height:32px;width:32px;margin-left:-16px;position:absolute;left:50%;z-index:4}
.fb_customer_chat_bounce_in{animation-duration:250ms;animation-name:fb_bounce_in}.fb_customer_chat_bounce_out{animation-duration:250ms;animation-name:fb_fade_out}.fb_invisible_flow{display:inherit;height:0;overflow-x:hidden;width:0}.fb_mobile_overlay_active{background-color:#fff;height:100%;overflow:hidden;position:fixed;visibility:hidden;width:100%}@keyframes fb_fade_out{from{opacity:1}to{opacity:0}}@keyframes fb_bounce_in{0%{opacity:0;transform:scale(.8, .8);transform-origin:100% 100%}10%{opacity:.1}20%{opacity:.2}30%{opacity:.3}40%{opacity:.4}50%{opacity:.5}60%{opacity:.6}70%{opacity:.7}80%{opacity:.8;transform:scale(1.03, 1.03)}90{opacity:.9}100%{opacity:1;transform:scale(1, 1)}}</style></head>
<body class="">
<div class="navbar no-items section" id="navbar">
</div>
<div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe name="fb_xdm_frame_https" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" allow="encrypted-media" id="fb_xdm_frame_https" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tabindex="-1" src="./video_files/RQ7NiRXMcYA.html" style="border: none;"></iframe></div></div><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div></div></div></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_GB/all.js#xfbml=1";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>
<div class="body-fauxcolumns">
<div class="fauxcolumn-outer body-fauxcolumn-outer">
<div class="cap-top">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
<div class="fauxborder-left">
<div class="fauxborder-right"></div>
<div class="fauxcolumn-inner">
</div>
</div>
<div class="cap-bottom">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
</div>
</div>
<div class="content">
<div class="content-fauxcolumns">
<div class="fauxcolumn-outer content-fauxcolumn-outer">
<div class="cap-top">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
<div class="fauxborder-left">
<div class="fauxborder-right"></div>
<div class="fauxcolumn-inner">
</div>
</div>
<div class="cap-bottom">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
</div>
</div>
<div class="content-outer">
<div class="content-cap-top cap-top">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
<div class="fauxborder-left content-fauxborder-left">
<div class="fauxborder-right content-fauxborder-right"></div>
<div class="content-inner">
<header>
<div class="header-outer">
<div class="header-cap-top cap-top">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
<div class="fauxborder-left header-fauxborder-left">
<div class="fauxborder-right header-fauxborder-right"></div>
<div class="region-inner header-inner">
<div class="header section" id="header"><div class="widget Header" data-version="1" id="Header1">
<div id="header-inner">
<div class="titlewrapper">
<h1 class="title">
<a href="https://www.opencv-srf.com/">
OpenCV Tutorial C++
</a>
</h1>
</div>
<div class="descriptionwrapper">
<p class="description"><span>
</span></p>
</div>
</div>
</div></div>
</div>
</div>
<div class="header-cap-bottom cap-bottom">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
</div>
</header>
<div class="tabs-outer">
<div class="tabs-cap-top cap-top">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
<div class="fauxborder-left tabs-fauxborder-left">
<div class="fauxborder-right tabs-fauxborder-right"></div>
<div class="region-inner tabs-inner">
<div class="tabs section" id="crosscol"><div class="widget PageList" data-version="1" id="PageList1">
<div class="widget-content">
<ul>
<li>
<a href="https://www.opencv-srf.com/">Home</a>
</li>
<li>
<a href="https://www.opencv-srf.com/p/opencv-lessons.html">OpenCV Lessons</a>
</li>
<li>
<a href="https://plus.google.com/+ShermalFernando">About me</a>
</li>
</ul>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="https://www.blogger.com/rearrange?blogID=1182128440772477840&amp;widgetType=PageList&amp;widgetId=PageList1&amp;action=editWidget&amp;sectionId=crosscol" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;PageList1&quot;));" target="configPageList1" title="Edit">
<img alt="" height="18" src="./video_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div>
</div></div>
<div class="tabs no-items section" id="crosscol-overflow"></div>
</div>
</div>
<div class="tabs-cap-bottom cap-bottom">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
</div>
<div class="main-outer">
<div class="main-cap-top cap-top">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
<div class="fauxborder-left main-fauxborder-left">
<div class="fauxborder-right main-fauxborder-right"></div>
<div class="region-inner main-inner">
<div class="columns fauxcolumns">
<div class="fauxcolumn-outer fauxcolumn-center-outer">
<div class="cap-top">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
<div class="fauxborder-left">
<div class="fauxborder-right"></div>
<div class="fauxcolumn-inner">
</div>
</div>
<div class="cap-bottom">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
</div>
<div class="fauxcolumn-outer fauxcolumn-left-outer">
<div class="cap-top">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
<div class="fauxborder-left">
<div class="fauxborder-right"></div>
<div class="fauxcolumn-inner">
</div>
</div>
<div class="cap-bottom">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
</div>
<div class="fauxcolumn-outer fauxcolumn-right-outer">
<div class="cap-top">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
<div class="fauxborder-left">
<div class="fauxborder-right"></div>
<div class="fauxcolumn-inner">
</div>
</div>
<div class="cap-bottom">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
</div>
<!-- corrects IE6 width calculation -->
<div class="columns-inner">
<div class="column-center-outer">
<div class="column-center-inner">
<div class="main section" id="main"><div class="widget Blog" data-version="1" id="Blog1">
<div class="blog-posts hfeed">

          <div class="date-outer">
        

          <div class="date-posts">
        
<div class="post-outer">
<div class="post hentry">
<a name="6871903895490733007"></a>
<h3 class="post-title entry-title">
Shape Detection &amp; Tracking using Contours
</h3>
<div class="post-header">
<div class="post-header-line-1"></div>
</div>
<div class="post-body entry-content" id="post-body-6871903895490733007">
<span style="font-family: Verdana, sans-serif;">In the <a href="http://opencv-srf.blogspot.com/2010/09/object-detection-using-color-seperation.html" target="_blank">previous tutorial</a>, we could detect and track an object using color&nbsp;separation. But we could not identify the shape of the object there. In this tutorial, let's see how to identify a shape and position of an object using contours with OpenCV.</span><br>
<span style="font-family: Verdana, sans-serif;"><br></span>
<span style="font-family: Verdana, sans-serif;">Using contours with OpenCV, you can get a sequence of points of vertices of each white patch (White patches are considered as polygons). As example, you will get 3 points (vertices) &nbsp;for a triangle,&nbsp;and 4 points for&nbsp;<span style="background-color: white;"><span style="line-height: 22px;">quadrilaterals. So, you can identify any polygon by the number of vertices of that polygon. You can even identify features of polygons such as convexity, concavity,&nbsp;</span><span style="line-height: 22px;">equilateral</span><span style="line-height: 22px;">&nbsp;and etc by calculating and comparing distances between vertices.&nbsp;</span></span></span><br>
<span style="font-family: Verdana, sans-serif;"><br></span>
<span style="font-family: Verdana, sans-serif;">Let's see how this can be done with OpenCV. All you need, is a binary image in which your objects should be white and the background should be black.</span><br>
<br>
<div class="separator" style="clear: both; text-align: center;">
</div>
<div class="separator" style="clear: both; text-align: center;">
</div>
<div class="separator" style="clear: both; text-align: center;">
</div>
<div class="separator" style="clear: both; text-align: center;">
</div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://4.bp.blogspot.com/-r36OpIdjPWE/UDPMJ2kPFZI/AAAAAAAAAPs/-eO4W_XeDo0/s1600/FindingContours.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img alt="Binary Image" border="0" height="324" src="./video_files/FindingContours.png" title="Binary Image" width="640"></a></div>
<br>
<br>
<span style="font-family: Verdana, sans-serif;">Now I am going to identify triangles and&nbsp;
<span style="background-color: white;"><span style="line-height: 22px;">quadrilaterals and heptagon in the above image using a C++&nbsp;</span><span style="line-height: 22px;">application</span><span style="line-height: 22px;">&nbsp;with OpenCV. &nbsp;I'll draw a line along the perimeter of every identified polygon with colors blue for triangle, green for&nbsp;</span><span style="line-height: 22px;">quadrilaterals</span><span style="line-height: 22px;">&nbsp;and red for heptagons.&nbsp;</span></span></span><span style="font-family: Verdana, sans-serif;"><span style="line-height: 22px;">Here is the code.</span></span><br>
<span style="line-height: 22px;"><br></span>
<br>
<span style="line-height: 22px;">///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</span><br>
<br>
<br>
<br>
<span style="line-height: 22px;"><b><span style="color: blue;">#include</span> <span style="color: red;">"stdafx.h"</span></b></span><br>
<span style="line-height: 22px;"><b><span style="color: blue;">#include</span> <span style="color: red;">&lt;cv.h&gt;</span></b></span><br>
<span style="line-height: 22px;"><b><span style="color: blue;">#include</span> <span style="color: red;">&lt;highgui.h&gt;</span></b></span><br>
<span style="line-height: 22px;"><b><span style="color: blue;">using namespace</span> std;</b></span><br>
<span style="line-height: 22px;"><b><br></b></span>
<span style="line-height: 22px;"><b><span style="color: blue;">int</span> main()</b></span><br>
<span style="line-height: 22px;"><b>{</b></span><br>
<span style="line-height: 22px;"><b><br></b></span>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>IplImage* img = &nbsp;cvLoadImage(<span style="color: red;">"C:/Users/SHERMAL/Desktop/FindingContours.png"</span>);</b></span><br>
<span class="Apple-tab-span" style="line-height: 22px; white-space: pre;"><b>  </b></span><br>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>//show the original image</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvNamedWindow(<span style="color: red;">"Raw"</span>);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvShowImage(<span style="color: red;">"Raw"</span>,img);</b></span><br>
<span style="line-height: 22px;"><b><br></b></span>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>//converting the original image into grayscale</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>IplImage* imgGrayScale = cvCreateImage(cvGetSize(img), 8, 1);&nbsp;</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvCvtColor(img,imgGrayScale,CV_BGR2GRAY);</b></span><br>
<span style="line-height: 22px;"><b><br></b></span>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>//thresholding the grayscale image to get better results</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvThreshold(imgGrayScale,imgGrayScale,128,255,CV_THRESH_BINARY);<span class="Apple-tab-span" style="white-space: pre;"> </span>&nbsp;</b></span><br>
<span class="Apple-tab-span" style="line-height: 22px; white-space: pre;"><b> </b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>CvSeq* contours; &nbsp;<span style="color: #38761d;">//hold the pointer to a contour in the memory block</span></b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>CvSeq* result; &nbsp; <span style="color: #38761d;">//hold sequence of points of a contour</span></b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>CvMemStorage *storage = cvCreateMemStorage(0); <span style="color: #38761d;">//storage area for all contours</span></b></span><br>
<span class="Apple-tab-span" style="line-height: 22px; white-space: pre;"><b> </b></span><br>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>//finding all contours in the image</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvFindContours(imgGrayScale, storage, &amp;contours, <span style="color: blue;">sizeof</span>(CvContour), CV_RETR_LIST, CV_CHAIN_APPROX_SIMPLE, cvPoint(0,0));</b></span><br>
<span class="Apple-tab-span" style="line-height: 22px; white-space: pre;"><b>  </b></span><br>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>//iterating through each contour</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span><span style="color: blue;">while</span>(contours)</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>{</b></span><br>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">     </span>//obtain a sequence of points of contour, pointed by the variable 'contour'</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">     </span>result = cvApproxPoly(contours, <span style="color: blue;">sizeof</span>(CvContour), storage, CV_POLY_APPROX_DP, cvContourPerimeter(contours)*0.02, 0);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">    </span> &nbsp; &nbsp; &nbsp;&nbsp;</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">     </span><span style="color: #38761d;">//if there are 3&nbsp;</span></b>
<b style="color: #38761d;">vertices&nbsp;</b>&nbsp;<b><span style="color: #38761d;">in the contour(It should be a triangle)</span></b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">    </span><span style="color: blue;">if</span>(result-&gt;total==3 )</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">     </span>{</b></span><br>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>//iterating through each point</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>CvPoint *pt[3];</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span><span style="color: blue;">for</span>(<span style="color: blue;">int </span>i=0;i&lt;3;i++){</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">             </span>pt[i] = (CvPoint*)cvGetSeqElem(result, i);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>}</b></span><br>
<span class="Apple-tab-span" style="line-height: 22px; white-space: pre;"><b>   </b></span><br>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>//drawing lines around the triangle</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>cvLine(img, *pt[0], *pt[1], cvScalar(255,0,0),4);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>cvLine(img, *pt[1], *pt[2], cvScalar(255,0,0),4);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>cvLine(img, *pt[2], *pt[0], cvScalar(255,0,0),4);</b></span><br>
<span class="Apple-tab-span" style="line-height: 22px; white-space: pre;"><b>       </b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">     </span>}</b></span><br>
<span style="line-height: 22px;"><b><br></b></span>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">     </span>//if there are 4 vertices in the contour(It should be a quadrilateral)</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">     </span><span style="color: blue;">else if</span>(result-&gt;total==4 )</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">     </span>{</b></span><br>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>//iterating through each point</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>CvPoint *pt[4];</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span><span style="color: blue;">for</span>(<span style="color: blue;">int </span>i=0;i&lt;4;i++){</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">             </span>pt[i] = (CvPoint*)cvGetSeqElem(result, i);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>}</b></span><br>
<span class="Apple-tab-span" style="line-height: 22px; white-space: pre;"><b>   </b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span><span style="color: #38761d;">//drawing lines around the quadrilateral</span></b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>cvLine(img, *pt[0], *pt[1], cvScalar(0,255,0),4);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>cvLine(img, *pt[1], *pt[2], cvScalar(0,255,0),4);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>cvLine(img, *pt[2], *pt[3], cvScalar(0,255,0),4);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>cvLine(img, *pt[3], *pt[0], cvScalar(0,255,0),4);<span class="Apple-tab-span" style="white-space: pre;">   </span></b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">     </span>}</b></span><br>
<span style="line-height: 22px;"><b><br></b></span>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">  </span>//if there are 7&nbsp;</b></span>
<b style="color: #38761d; line-height: 22px;">vertices&nbsp;</b>&nbsp;<span style="color: #38761d; line-height: 22px;"><b>in the contour(It should be a heptagon)</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">     </span><span style="color: blue;">else if</span>(result-&gt;total ==7 &nbsp;)</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">     </span>{</b></span><br>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>//iterating through each point</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>CvPoint *pt[7];</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span><span style="color: blue;">for</span>(<span style="color: blue;">int </span>i=0;i&lt;7;i++){</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">             </span>pt[i] = (CvPoint*)cvGetSeqElem(result, i);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>}</b></span><br>
<span class="Apple-tab-span" style="line-height: 22px; white-space: pre;"><b>   </b></span><br>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>//drawing lines around the heptagon</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>cvLine(img, *pt[0], *pt[1], cvScalar(0,0,255),4);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>cvLine(img, *pt[1], *pt[2], cvScalar(0,0,255),4);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>cvLine(img, *pt[2], *pt[3], cvScalar(0,0,255),4);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>cvLine(img, *pt[3], *pt[4], cvScalar(0,0,255),4);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>cvLine(img, *pt[4], *pt[5], cvScalar(0,0,255),4);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>cvLine(img, *pt[5], *pt[6], cvScalar(0,0,255),4);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">         </span>cvLine(img, *pt[6], *pt[0], cvScalar(0,0,255),4);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">     </span>}</b></span><br>
<span style="line-height: 22px;"><b><br></b></span>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">     </span>//obtain the next contour</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;">     </span>contours = contours-&gt;h_next;<span class="Apple-tab-span" style="white-space: pre;"> </span></b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>}</b></span><br>
<span style="line-height: 22px;"><b><br></b></span>
<span style="line-height: 22px;"><b><span style="color: #38761d;"><span class="Apple-tab-span" style="white-space: pre;"> </span>//show the image in which identified shapes are marked &nbsp;</span>&nbsp;</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvNamedWindow(<span style="color: red;">"Tracked"</span>);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvShowImage(<span style="color: red;">"Tracked"</span>,img);</b></span><br>
<span style="line-height: 22px;"><b>&nbsp; &nbsp;</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvWaitKey(0); <span style="color: #38761d;">//wait for a key press</span></b></span><br>
<span style="line-height: 22px;"><b><br></b></span>
<span style="color: #38761d; line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>//cleaning up</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvDestroyAllWindows();&nbsp;</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvReleaseMemStorage(&amp;storage);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvReleaseImage(&amp;img);</b></span><br>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvReleaseImage(&amp;imgGrayScale);</b></span><br>
<span style="line-height: 22px;"><b><br></b></span>
<span style="line-height: 22px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span><span style="color: blue;">return </span>0;</b></span><br>
<span style="line-height: 22px;"><b>}</b></span><br>
<br>
<span style="line-height: 22px;">///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</span>
<br>
<span style="line-height: 22px;"><span style="font-family: inherit;"><span style="background-color: white; color: #222222; line-height: 18px;">You can download this OpenCV visual c++ project from&nbsp;</span><a href="https://www.box.com/s/837baff2cc42c467a180" rel="nofollow" target="_blank">here</a><span style="background-color: white; color: #222222; line-height: 18px;">.&nbsp;</span><span class="Apple-style-span" style="background-color: white; color: #222222;">(The downloaded file is a compressed .rar folder. So, you have to extract it using&nbsp;<a href="http://www.win-rar.com/" style="color: #888888; text-decoration: none;" target="_blank">Winrar</a>&nbsp;or other suitable software)</span></span>
</span><br>
<span style="line-height: 22px;"><span style="font-family: inherit;"><span class="Apple-style-span" style="background-color: white; color: #222222;"><br></span></span></span>
<br>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://2.bp.blogspot.com/-olgBqVL0C60/UDUDJyRFoUI/AAAAAAAAAQA/7GXI2s145ns/s1600/ObjectDetection-contours.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img alt="White blobs with different shapes are detected using contours with OpenCV functions" border="0" height="340" src="./video_files/ObjectDetection-contours.png" title="Object detection using Contours with OpenCV" width="640"></a></div>
<span style="line-height: 22px;"><span style="font-family: inherit;"><span class="Apple-style-span" style="background-color: white; color: #222222;"><br></span></span></span>
<span class="Apple-style-span" style="background-color: white; font-family: Verdana, sans-serif;"><span style="color: #222222;"><span style="line-height: 22px;">As you can see, triangles are marked with blue,&nbsp;</span></span><span style="color: #222222;"><span style="line-height: 22px;">quadrilaterals are marked with green and heptagons are marked with red. So, now it is obvious that this method is capable of identifying shapes.</span></span><span style="color: #222222;"><span style="line-height: 22px;">&nbsp;</span></span></span><br>
<span class="Apple-style-span" style="background-color: white;"><span style="color: #222222;"><span style="font-family: Verdana, sans-serif; line-height: 22px;"><br></span></span></span>
<span class="Apple-style-span" style="background-color: white;"><span style="color: #bf9000; font-family: Verdana, sans-serif; font-size: large; line-height: 22px;"><b>Explanation</b></span></span><br>
<span class="Apple-style-span" style="background-color: white;"><span style="color: #bf9000; font-family: Verdana, sans-serif; font-size: large; line-height: 22px;"><b><br></b></span></span>
<span class="Apple-style-span" style="background-color: white;"><span style="color: #222222;"><span style="font-family: Verdana, sans-serif; line-height: 22px;">Here I have converted the original image in to gray scale. It is because this method works only with gray scale image with single channel. To get better results, I threshold the gray-scale image using 'cvThreshold' function. You can use your own way to threshold the image. Then I find all contours in the thresholded image and identify and track all triangles, quadrilaterals and heptagons.</span></span></span><br>
<span class="Apple-style-span" style="background-color: white;"><span style="color: #222222;"><span style="font-family: Verdana, sans-serif; line-height: 22px;"><br></span></span></span>
<span class="Apple-style-span" style="background-color: white;"><span style="color: #222222;"><span style="font-family: Verdana, sans-serif; line-height: 22px;">Let's discuss new OpenCV functions, found in this application.</span></span></span><br>
<span class="Apple-style-span" style="background-color: white;"><span style="color: #222222; font-family: inherit;"><span style="line-height: 22px;"><br></span></span></span>
<br>
<h3>
<br>
<ul>
<li><span style="color: #222222;"><span style="line-height: 22px;"><span style="color: black; font-size: small;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span><span style="font-family: Verdana, sans-serif;">cvThreshold(</span>
<span style="background-color: white; line-height: normal;"><span style="font-family: Verdana, sans-serif;">const&nbsp;</span></span><span style="font-family: Verdana, sans-serif;">Mat</span><span style="background-color: white; line-height: normal;"><span style="font-family: Verdana, sans-serif;">&amp;</span></span><span style="line-height: normal;"><span style="background-color: white; font-style: italic;"><span style="font-family: Verdana, sans-serif;">&nbsp;</span></span><span style="font-family: Verdana, sans-serif;">src</span></span><span style="background-color: white; line-height: normal;"><span style="font-family: Verdana, sans-serif;">,&nbsp;</span></span><span style="font-family: Verdana, sans-serif;">Mat</span><span style="background-color: white; line-height: normal;"><span style="font-family: Verdana, sans-serif;">&amp;</span></span><span style="line-height: normal;"><i style="font-family: sans-serif;">&nbsp;</i><span style="font-family: Verdana, sans-serif;">dst</span></span><span style="background-color: white; line-height: normal;"><span style="font-family: Verdana, sans-serif;">, double</span></span><span style="line-height: normal;"><span style="font-family: sans-serif; font-style: italic;">&nbsp;</span><span style="font-family: Verdana, sans-serif;">threshVal</span></span><span style="background-color: white; line-height: normal;"><span style="font-family: Verdana, sans-serif;">, double</span></span><span style="line-height: normal;"><i style="font-family: sans-serif;">&nbsp;</i><span style="font-family: Verdana, sans-serif;">max</span></span><span style="background-color: white; font-family: sans-serif; line-height: normal;">, int</span><span style="line-height: normal;"><span style="background-color: white; font-family: sans-serif; font-style: italic;">&nbsp;</span><span class="highlight" style="background-color: white;"><span style="font-family: Verdana, sans-serif;">threshold</span></span><span style="font-family: Verdana, sans-serif;">Type</span></span>&nbsp;<span style="font-family: Verdana, sans-serif;">)</span></b></span></span></span></li>
</ul>
</h3>
<div>
<span style="font-family: Verdana, sans-serif;"><span style="font-size: small; line-height: 22px;">applies a fix level threshold to the each element of 'src' array write a value to corresponding array element of 'dst'</span></span></div>
<div>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 22px;"><br></span></span></div>
<div>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 22px;">Arguements -</span></span></div>
<div>
<ul><ul>
<li><span style="font-family: Verdana, sans-serif; line-height: 22px;">const Mat&amp; src - Source array (This should be single channel)</span></li>
<li><span style="font-family: Verdana, sans-serif; font-size: small; line-height: 22px;">Mat</span><span style="background-color: white; font-family: &#39;Times New Roman&#39;; font-size: small;"><span style="font-family: Verdana, sans-serif;">&amp;</span></span><span style="font-family: &#39;Times New Roman&#39;; font-size: small;"><i style="font-family: sans-serif;">&nbsp;</i><span style="font-family: Verdana, sans-serif;">dst - Destination array which has the same size and same type as the 'src'</span></span></li>
<li><span style="background-color: white; font-family: &#39;Times New Roman&#39;; font-size: small;"><span style="font-family: Verdana, sans-serif;">double</span></span><span style="font-family: &#39;Times New Roman&#39;; font-size: small;"><span style="font-family: sans-serif; font-style: italic;">&nbsp;</span><span style="font-family: Verdana, sans-serif;">threshVal - Threshold value</span></span></li>
<li><span style="font-family: Verdana, sans-serif;"><span style="line-height: 22px;"><span style="font-family: &#39;Times New Roman&#39;; line-height: normal;"><span style="font-family: Verdana, sans-serif;"><span style="font-family: &#39;Times New Roman&#39;;"><span style="font-family: Verdana, sans-serif; font-size: small;"><span style="font-family: &#39;Times New Roman&#39;;"><span style="font-family: Verdana, sans-serif;"><span style="font-family: Verdana, sans-serif;"><span style="line-height: 22px;"><span style="font-family: &#39;Times New Roman&#39;; line-height: normal;"><span style="font-family: Verdana, sans-serif;"><span style="font-family: &#39;Times New Roman&#39;;"><span style="font-family: Verdana, sans-serif;"><span style="font-family: &#39;Times New Roman&#39;;"><span style="font-family: Verdana, sans-serif;"><span style="background-color: white; font-family: &#39;Times New Roman&#39;;"><span style="font-family: Verdana, sans-serif;">double</span></span><span style="font-family: &#39;Times New Roman&#39;;"><i style="font-family: sans-serif;">&nbsp;</i><span style="font-family: Verdana, sans-serif;">max - Maximum value to use with</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color: white; line-height: 20px; text-align: justify;">&nbsp;<span style="font-family: Verdana, sans-serif; font-size: small;">'</span></span><span style="font-size: small;"><tt class="docutils literal" style="background-color: white; line-height: 20px; padding: 0px 1px; text-align: justify;"><span class="pre"><span style="font-family: Verdana, sans-serif;">THRESH_BINARY' and&nbsp;</span></span></tt><span style="background-color: white; font-family: Verdana, sans-serif; line-height: 20px; text-align: justify;">'</span><tt class="docutils literal" style="background-color: white; line-height: 20px; padding: 0px 1px; text-align: justify;"><span class="pre"><span style="font-family: Verdana, sans-serif;">THRESH_BINARY_INV' which are thresholding types</span></span></tt></span></li>
<li><span style="font-family: Verdana, sans-serif; font-size: small;">int</span><span style="font-size: small;"><span style="font-family: Verdana, sans-serif;"><span style="font-style: italic;">&nbsp;</span><span class="highlight">threshold</span>Type<span style="font-family: Times New Roman;"> - </span>You can use one of the following for this arguement</span></span></li>
<ul>
<li><span style="background-color: white; font-family: Verdana, sans-serif; line-height: 20px; text-align: justify;">THRESH_BINARY</span></li>
</ul>
</ul>
</ul>
<span style="font-family: Verdana, sans-serif; line-height: 20px; text-align: justify;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dst(x,y)=max, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if src(x,y) &gt; ThreshVal</span><br>
<span style="font-family: Verdana, sans-serif; line-height: 20px; text-align: justify;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dst(x,y)=0, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if src(x,y) &lt; ThreshVal</span></div>
<div>
<div style="text-align: start;">
<ul><ul><ul>
<li><span style="background-color: white; font-family: Verdana, sans-serif; line-height: 20px; text-align: justify;">THRESH_BINARY_INV</span></li>
</ul>
</ul>
</ul>
<span style="font-family: Verdana, sans-serif; line-height: 20px; text-align: justify;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dst(x,y)=0, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if src(x,y) &gt; ThreshVal</span></div>
<div style="text-align: start;">
<span style="font-family: Verdana, sans-serif; line-height: 20px; text-align: justify;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dst(x,y)=max, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if src(x,y) &lt; ThreshVal</span></div>
<div style="text-align: justify;">
<div>
<br></div>
<div>
<ul><ul><ul>
<li><span style="line-height: 20px;"><span style="background-color: white; font-family: Verdana, sans-serif;">THRESH_TOZERO</span>
</span></li>
</ul>
</ul>
</ul>
</div>
</div>
<div>
<span style="font-family: Verdana, sans-serif;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style="font-family: sans-serif; line-height: 20px; text-align: justify;">dst(x,y)=src(x,y), &nbsp; &nbsp; &nbsp; if src(x,y) &gt; ThreshVal</span><br>
<span style="font-family: sans-serif; line-height: 20px; text-align: justify;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dst(x,y)=0, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if src(x,y) &lt; ThreshVal</span></div>
</div>
<div style="text-align: justify;">
<div>
<ul><ul><ul>
<li><span style="line-height: 20px;"><span style="background-color: white; font-family: Verdana, sans-serif;">THRESH_TOZERO_INV</span></span></li>
</ul>
</ul>
</ul>
</div>
<div style="text-align: start;">
<span style="font-family: Verdana, sans-serif;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style="font-family: Verdana, sans-serif; line-height: 20px; text-align: justify;">dst(x,y)=0, &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if src(x,y) &gt; ThreshVal</span></div>
<div>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 20px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span style="line-height: 20px;">dst(x,y)=src(x,y), &nbsp; &nbsp; &nbsp; &nbsp;if src(x,y) &lt; ThreshVal</span></span></div>
</div>
<ul><ul><ul>
<li><span style="background-color: white; font-family: Verdana, sans-serif; line-height: 20px; text-align: justify;">THRESH_TRUNC</span></li>
</ul>
</ul>
</ul>
<div style="text-align: justify;">
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 20px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></span><span style="font-family: Verdana, sans-serif; line-height: 20px;">dst(x,y)=threshVal, &nbsp; &nbsp;if src(x,y) &gt; ThreshVal</span></div>
<div style="text-align: justify;">
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 20px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span style="line-height: 20px;">dst(x,y)=src(x,y), &nbsp; &nbsp; &nbsp; &nbsp;if src(x,y) &lt; ThreshVal</span></span><br>
<span style="font-family: Verdana, sans-serif; line-height: 20px;"><br></span>
<span style="font-family: Verdana, sans-serif; line-height: 20px;"><br></span>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 20px;">In the above application, I have used</span><span style="line-height: 20px;"> </span><span style="line-height: 20px;">'</span><span style="background-color: white; line-height: 20px;">THRESH_BINARY', because I want to assign 255 (white) where the objects are located and 0 (black) elsewhere.</span></span></div>
<div style="text-align: justify;">
<span style="background-color: white; font-family: Verdana, sans-serif; font-size: 16px; line-height: 20px;"><br></span></div>
<div style="text-align: justify;">
<span style="background-color: white; font-family: Verdana, sans-serif; font-size: 16px; line-height: 20px;"><br></span></div>
<div style="text-align: justify;">
<ul>
<li><span style="font-family: Verdana, sans-serif;"><span style="line-height: 20px;"><b style="line-height: 22px; text-align: start;">cvCreateMemStorage(int byteSize)</b></span></span></li>
</ul>
<div style="text-align: start;">
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 22px;">Creates memory storage which has the capacity specified by the parameter 'byteSize'. But if byteSize=0, the allocated capacity is the default value(usually 64 Kb)</span></span><br>
<b style="line-height: 22px;"><span style="font-family: Verdana, sans-serif; font-size: small;"><br></span></b>
<br>
<ul>
<li><b style="line-height: 22px;"><span style="font-family: Verdana, sans-serif; font-size: small;">cvFindContours(</span>
<span style="background-color: white; font-family: Verdana, sans-serif; font-size: small; line-height: normal;">CvArr*</span><span style="font-family: Verdana, sans-serif; font-size: small; line-height: normal;"><i>&nbsp;</i>img</span><span style="background-color: white; font-family: Verdana, sans-serif; font-size: small; line-height: normal;">, CvMemStorage*</span><span style="font-family: Verdana, sans-serif; font-size: small; line-height: normal;"><span style="font-style: italic;">&nbsp;</span>str</span><span style="background-color: white; font-family: Verdana, sans-serif; font-size: small; line-height: normal;">, CvSeq**</span><span style="font-family: Verdana, sans-serif; font-size: small; line-height: normal;"><i>&nbsp;</i>first_contour</span><span style="background-color: white; font-family: Verdana, sans-serif; font-size: small; line-height: normal;">, int</span><span style="font-family: Verdana, sans-serif; font-size: small; line-height: normal;"><i>&nbsp;</i>header_size</span><span style="background-color: white; font-family: Verdana, sans-serif; font-size: small; line-height: normal;">, int&nbsp;</span><span style="font-family: Verdana, sans-serif; font-size: small; line-height: normal;">mode</span><span style="background-color: white; font-family: Verdana, sans-serif; font-size: small; line-height: normal;">, int</span><span style="font-family: Verdana, sans-serif; font-size: small; line-height: normal;"><i>&nbsp;</i>method</span><span style="background-color: white; font-family: Verdana, sans-serif; font-size: small; line-height: normal;">, CvPoint</span><span style="font-family: Verdana, sans-serif; font-size: small; line-height: normal;"><span style="font-style: italic;">&nbsp;</span>offset</span><span style="font-family: Verdana, sans-serif; font-size: small;">&nbsp;)</span></b></li>
</ul>
<span style="font-family: Verdana, sans-serif; line-height: 22px;">Find all contours in a binary image</span><br>
<span style="font-family: Verdana, sans-serif; line-height: 22px;">Arguments -&nbsp;</span></div>
<div style="text-align: start;">
<div>
<ul><ul>
<li><span style="background-color: white; font-family: Verdana, sans-serif;">CvArr*</span><span style="font-family: Verdana, sans-serif;"><i>&nbsp;</i>img - Source image (This should be 8 bit single channel). All non-zero pixels are considered as 1 and all zero remain zero.</span></li>
<li><span style="font-family: Verdana, sans-serif;"><span style="background-color: white;">CvMemStorage*</span><span style="font-style: italic;">&nbsp;</span>str - Memory blocks to store all obtained contours</span></li>
<li><span style="font-family: Verdana, sans-serif;"><span style="background-color: white;">CvSeq**</span><i>&nbsp;</i>first_contour - store a pointer to the first contour in the memory block, 'str'</span></li>
<li><span style="font-family: Verdana, sans-serif;"><span style="background-color: white;">int</span><i>&nbsp;</i>header_size - size of the sequence header</span></li>
<li><span style="font-family: Verdana, sans-serif;"><span style="background-color: white;">int&nbsp;</span>mode - mode of retrieval of contours from the image</span></li>
</ul>
</ul>
<div>
<span style="font-family: Verdana, sans-serif;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; You have to choose one of the following</span></div>
<div>
<ul style="background-color: white; line-height: 20px; margin: 0px; padding-left: 1em; text-align: justify;"><ul><ul><ul>
<li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">CV_RETR_LIST&nbsp;- Retrieves all of the contours and put them in a list
</span></li>
<li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">CV_RETR_EXTERNAL&nbsp;- Retrieves only the extreme outer contours</span></li>
<li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">CV_RETR_CCOMP&nbsp;- Retrieves all of the contours and organizes them into a two-level hierarchy: on the top level are the external boundaries of the components, on the second level are the boundaries of the holes</span></li>
<li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">CV_RETR_TREE&nbsp;- Retrieves all of the contours and reconstructs the full hierarchy of nested contours</span></li>
</ul>
</ul>
</ul>
</ul>
</div>
</div>
<div>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 22px;"><br></span></span></div>
<div>
<ul><ul>
<li><span style="font-family: Verdana, sans-serif; line-height: 22px;"><span style="background-color: white; line-height: normal;">int</span><span style="line-height: normal;"><i>&nbsp;</i>method - Approximation method</span></span></li>
</ul>
</ul>
<div>
<span style="font-family: Verdana, sans-serif;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; You have to choose one of the following</span></div>
</div>
<div>
<span style="font-family: Verdana, sans-serif;"><br></span></div>
<div>
<ul style="background-color: white; line-height: 20px; margin: 0px; padding-left: 1em; text-align: justify;"><ul><ul><ul>
<li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">CV_CHAIN_CODE&nbsp;- Outputs contours in the Freeman chain code</span></li>
<li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">CV_CHAIN_APPROX_NONE&nbsp;- Translates all of the points from the chain code into points</span></li>
<li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">CV_CHAIN_APPROX_SIMPLE&nbsp;- Compresses horizontal, vertical, and diagonal segments and leaves only their end points</span></li>
<li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">CV_CHAIN_APPROX_TC89_L1,CV_CHAIN_APPROX_TC89_KCOS&nbsp;- Applies one of the flavors of the Teh-Chin chain approximation algorithm.</span></li>
<li style="text-align: justify;"><span style="font-family: Verdana, sans-serif;">CV_LINK_RUNS&nbsp;- uses a completely different contour retrieval algorithm by linking horizontal segments of 1’s. Only the '<tt class="xref docutils literal" style="background-color: transparent; padding: 0px 1px;"><span class="pre">CV_RETR_LIST'</span></tt>&nbsp;retrieval mode can be used with this method.</span></li>
</ul>
</ul>
</ul>
</ul>
<div style="text-align: justify;">
<br></div>
</div>
<div style="text-align: justify;">
<br></div>
<div style="text-align: justify;">
<ul><ul>
<li><span style="line-height: 20px;"><span style="line-height: 21.981481552124023px; text-align: left;"><span style="font-family: Verdana, sans-serif;"><span style="background-color: white; line-height: normal;">CvPoint</span><span style="line-height: normal;"><span style="font-style: italic;">&nbsp;</span>offset</span></span><span style="font-family: Verdana, sans-serif;">&nbsp;- Offset by which every contour point should be </span><span style="font-family: sans-serif;">shifted. </span><span style="font-family: Verdana, sans-serif;">This is useful when we have set ROI (Region Of Interest) in the image. Normally we set the offset to 'cvPoint(0,0)'</span></span></span></li>
</ul>
</ul>
<div style="text-align: left;">
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.94444465637207px;"><br></span></span></div>
<div style="text-align: left;">
<ul>
<li><span style="line-height: 21.94444465637207px;"><b style="line-height: 21.981481552124023px;"><span style="font-family: Verdana, sans-serif;">cvApproxPoly(
</span><span style="font-family: Verdana, sans-serif;"><span style="background-color: white; line-height: normal;">const void*</span><span style="background-color: white; line-height: normal;"><i>&nbsp;</i>src</span><span style="background-color: white; line-height: normal;">, int</span><span style="background-color: white; line-height: normal;"><i>&nbsp;</i>header_size</span><span style="background-color: white; line-height: normal;">, CvMemStorage*</span><span style="background-color: white; line-height: normal;"><i>&nbsp;</i>storage</span><span style="background-color: white; line-height: normal;">, int</span><span style="background-color: white; line-height: normal;"><i>&nbsp;</i>method</span><span style="background-color: white; line-height: normal;">, double</span><span style="background-color: white; line-height: normal;"><i>&nbsp;</i>para1</span><span style="background-color: white; line-height: normal;">, int&nbsp;</span><span style="background-color: white; line-height: normal;">para2</span></span><span style="font-family: Verdana, sans-serif;">&nbsp;)</span></b></span></li>
</ul>
<div>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.962963104248047px;">Approximate polygonal curves with specified precision</span></span></div>
<div>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.962963104248047px;"><br></span></span></div>
<div>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.962963104248047px;">arguments -&nbsp;</span></span></div>
<div>
<ul><ul>
<li><span style="line-height: 21.94444465637207px;"><span style="font-family: Verdana, sans-serif; line-height: 21.981481552124023px;"><span style="background-color: white; line-height: normal;">const void*</span><span style="background-color: white; line-height: normal;"><i>&nbsp;</i>src - Sequence of points</span></span></span></li>
<li><span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.94444465637207px;"><span style="line-height: 21.981481552124023px;"><span style="background-color: white; line-height: normal;"><span style="line-height: 21.981481552124023px;"><span style="line-height: normal;">int</span><span style="line-height: normal;"><i>&nbsp;</i>header_size -&nbsp;</span></span></span></span></span>
size of the sequence header</span></li>
<li><span style="line-height: 21.94444465637207px;"><span style="line-height: 21.981481552124023px;"><span style="background-color: white; line-height: normal;"><span style="line-height: 21.981481552124023px;"><span style="line-height: normal;"><span style="font-family: Verdana, sans-serif; line-height: 21.981481552124023px;"><span style="line-height: normal;">CvMemStorage*</span><span style="line-height: normal;"><i>&nbsp;</i>storage - memory block that contains all contours</span></span></span></span></span></span></span></li>
<li><span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.94444465637207px;"><span style="line-height: 21.981481552124023px;"><span style="background-color: white; line-height: normal;"><span style="line-height: 21.981481552124023px;"><span style="line-height: normal;"><span style="line-height: 21.981481552124023px;"><span style="line-height: normal;"><span style="line-height: 21.981481552124023px;"><span style="line-height: normal;">int</span><span style="line-height: normal;"><i>&nbsp;</i>method - Approximation method. (The only method, available to use for this argument is '</span></span></span></span></span></span></span></span></span></span><span style="line-height: 21.981481552124023px;">CV_POLY_APPROX_DP</span><span style="line-height: 21.981481552124023px;">')</span></li>
<li><span style="line-height: 21.981481552124023px;"><span style="font-family: Verdana, sans-serif; line-height: 21.981481552124023px;"><span style="background-color: white; line-height: normal;">double</span><span style="background-color: white; line-height: normal;"><i>&nbsp;</i>para1 - approximation accuracy</span></span></span></li>
<li><span style="background-color: white;"><span style="font-family: Verdana, sans-serif;"><span style="line-height: normal;">int&nbsp;</span><span style="line-height: normal;">para2 - D</span></span><span style="font-family: Verdana, sans-serif;"><span style="font-size: small;">etermines&nbsp;whether the single sequence should be approximated or all sequences in the same level or below&nbsp;</span></span></span></li>
</ul>
</ul>
<div>
<span style="font-family: Verdana, sans-serif;"><br></span></div>
</div>
<div>
<ul>
<li><span style="font-family: Verdana, sans-serif;"><b style="line-height: 21.981481552124023px;">cvGetSeqElem(
<span style="background-color: white; line-height: normal;">const CvSeq*</span><span style="background-color: white; line-height: normal;"><i>&nbsp;</i>seq</span><span style="background-color: white; line-height: normal;">, int</span><span style="background-color: white; line-height: normal;"><span style="font-size: small; font-style: italic;">&nbsp;</span>index</span>&nbsp;)</b></span></li>
</ul>
<div>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.94444465637207px;">Returns a pointer to the element of 'seq' at 'index'</span></span></div>
</div>
<div>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.94444465637207px;"><br></span></span></div>
<div>
<ul>
<li><span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.94444465637207px;"><b style="line-height: 21.981481552124023px;"><span class="Apple-tab-span" style="white-space: pre;"> </span>cvReleaseMemStorage(
<span style="background-color: white; line-height: normal;">CvMemStorage**</span><span style="line-height: normal;"><span style="font-style: italic; font-weight: normal;">&nbsp;</span>storage</span>&nbsp;)</b></span></span></li>
</ul>
<div>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.94444465637207px;">Deallocate memory blocks which have been allocated by '</span></span><span style="font-family: Verdana, sans-serif; line-height: 22px;">cvCreateMemStorage()' function</span></div>
</div>
<div>
<span style="font-family: Verdana, sans-serif;"><br></span>
<span style="font-family: Verdana, sans-serif;"><br></span>
<span style="font-family: Verdana, sans-serif;"><br></span>
<br>
<h3>
<span style="color: #b45f06; font-family: Verdana, sans-serif; font-size: large;">Real World Example</span></h3>
</div>
<div>
<span style="color: #b45f06; font-family: Verdana, sans-serif; font-size: large;"><br></span></div>
<div>
<span style="font-family: Verdana, sans-serif;">The above example is not really useful in&nbsp;practical&nbsp;situation. Usually, there are lots of noises in an image such as irregular lighting, shadows, camera irregularities and etc. So, above application as it is, cannot be used to identify shapes in a real image. It should be modified to cope with these noises. And images usually have 3 channels (BGR color). So, it&nbsp;should&nbsp;be converted into&nbsp;grey-scale&nbsp;which has only one channel.&nbsp;</span></div>
<div>
<span style="font-family: Verdana, sans-serif;"><br></span></div>
<div>
<span style="font-family: Verdana, sans-serif;">Here is a real world image of an arena of a robot soccer, taken from a camera.</span></div>
<div>
<span style="font-family: Verdana, sans-serif;"><br></span></div>
<div class="separator" style="clear: both; text-align: center;">
<a href="https://1.bp.blogspot.com/-PKM6wvXtKUo/UDj0pXVs0aI/AAAAAAAAAQU/qmVvGlQ6uFA/s1600/DetectingContours.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img alt="Robot Arena" border="0" height="510" src="./video_files/DetectingContours.jpg" title="Robot Arena" width="640"></a></div>
<div>
<span style="font-family: Verdana, sans-serif;"><br></span></div>
<div>
<span style="font-family: Verdana, sans-serif;">Here, we are going to detect and mark the perimeter of each triangle in the image with a blue line. Let's see the modified OpenCV c++&nbsp;application which accomplish the above task.</span></div>
<div>
<span style="font-family: Verdana, sans-serif;"><br></span></div>
<div>
<span style="line-height: 21.981481552124023px;">///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</span>
</div>
<div>
<span style="line-height: 21.96875px;"><b></b></span><br>
<span style="line-height: 21.96875px;"><b><span style="color: blue;">#include</span> <span style="color: red;">"stdafx.h"</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span style="color: blue;">#include</span> <span style="color: red;">&lt;cv.h&gt;</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span style="color: blue;">#include</span> <span style="color: red;">&lt;highgui.h&gt;</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span style="color: blue;">using namespace</span> std;</b></span><br>
<span style="line-height: 21.96875px;"><b><br></b></span>
<span style="line-height: 21.96875px;"><b><span style="color: blue;">int</span> main()</b></span><br>
<span style="line-height: 21.96875px;"><b>{</b></span><br>
<span style="line-height: 21.96875px;"><b><br></b></span>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>IplImage* img = &nbsp;cvLoadImage(<span style="color: red;">"C:/Users/SHERMAL/Desktop/DetectingContours.jpg"</span>);</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">  </span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span><span style="color: #38761d;">//show the original image</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvNamedWindow(<span style="color: red;">"Original"</span>);</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvShowImage(<span style="color: red;">"Original"</span>,img);</b></span><br>
<span style="line-height: 21.96875px;"><b><br></b></span>
<span style="line-height: 21.96875px;"><b>&nbsp;<span style="color: #38761d;">//smooth the original image using Gaussian kernel to remove noise</span></b></span><br>
<span style="line-height: 21.96875px;"><b>cvSmooth(</b><b>img</b><b>,&nbsp;</b><b>img</b><b>, CV_GAUSSIAN,3,3);</b></span><br>
<span style="line-height: 21.96875px;"><b><br></b></span>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span><span style="color: #38761d;">//converting the original image into grayscale</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>IplImage* imgGrayScale = cvCreateImage(cvGetSize(img), 8, 1);&nbsp;</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvCvtColor(img,imgGrayScale,CV_BGR2GRAY);</b></span><br>
<span style="line-height: 21.96875px;"><b><br></b></span>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvNamedWindow(<span style="color: red;">"GrayScale Image"</span>);</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvShowImage(<span style="color: red;">"GrayScale Image"</span>,imgGrayScale);</b></span><br>
<span style="line-height: 21.96875px;"><b><br></b></span>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span><span style="color: #38761d;">//thresholding the grayscale image to get better results</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvThreshold(imgGrayScale,imgGrayScale,100,255,CV_THRESH_BINARY_INV);</b></span><br>
<span style="line-height: 21.96875px;"><b><br></b></span>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvNamedWindow(<span style="color: red;">"Thresholded Image"</span>);</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvShowImage(<span style="color: red;">"Thresholded Image"</span>,imgGrayScale);</b></span><br>
<span style="line-height: 21.96875px;"><b><br></b></span>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>CvSeq* contour; &nbsp;<span style="color: #38761d;">//hold the pointer to a contour</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>CvSeq* result; &nbsp; <span style="color: #38761d;">//hold sequence of points of a contour</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>CvMemStorage *storage = cvCreateMemStorage(0); <span style="color: #38761d;">//storage area for all contours</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span><span style="color: #38761d;">//finding all contours in the image</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvFindContours(imgGrayScale, storage, &amp;contour, <span style="color: blue;">sizeof</span>(CvContour), CV_RETR_LIST, CV_CHAIN_APPROX_SIMPLE, cvPoint(0,0));</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">  </span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span><span style="color: #38761d;">//iterating through each contour</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span><span style="color: blue;">while</span>(contour)</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>{</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">  </span><span style="color: #38761d;">//obtain a sequence of points of the countour, pointed by the variable 'countour'</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">  </span>result = cvApproxPoly(contour,<span style="color: blue;"> sizeof</span>(CvContour), storage, CV_POLY_APPROX_DP, cvContourPerimeter(contour)*0.02, 0);</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">    </span> &nbsp; &nbsp; &nbsp;&nbsp;</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">  </span><span style="color: #38761d;">//if there are 3 vertices &nbsp;in the contour and the area of the triangle is more than 100 pixels</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">  </span>if(result-&gt;total==3 &amp;&amp; fabs(cvContourArea(result, CV_WHOLE_SEQ))&gt;100 )</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">  </span>{</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">   </span><span style="color: #38761d;">//iterating through each point</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">   </span>CvPoint *pt[3];</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">   </span><span style="color: blue;">for</span>(<span style="color: blue;">int</span> i=0;i&lt;3;i++){</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">    </span>pt[i] = (CvPoint*)cvGetSeqElem(result, i);</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">   </span>}</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">   </span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">   </span><span style="color: #38761d;">//drawing lines around the triangle</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">   </span>cvLine(img, *pt[0], *pt[1], cvScalar(255,0,0),4);</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">   </span>cvLine(img, *pt[1], *pt[2], cvScalar(255,0,0),4);</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">   </span>cvLine(img, *pt[2], *pt[0], cvScalar(255,0,0),4);</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">       </span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">  </span>}</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">  </span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">  </span><span style="color: #38761d;">//obtain the next contour</span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;">  </span>contour = contour-&gt;h_next;<span class="Apple-tab-span" style="white-space: pre;"> </span></b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>}</b></span><br>
<span style="line-height: 21.96875px;"><b><br></b></span>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span><span style="color: #38761d;">//show the image in which identified shapes are marked</span> &nbsp;&nbsp;</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvNamedWindow(<span style="color: red;">"Tracked"</span>);</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvShowImage(<span style="color: red;">"Tracked"</span>,img);</b></span><br>
<span style="line-height: 21.96875px;"><b>&nbsp; &nbsp;</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvWaitKey(0); <span style="color: #38761d;">//wait for a key press</span></b></span><br>
<span style="line-height: 21.96875px;"><b><br></b></span>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>//cleaning up</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvDestroyAllWindows();&nbsp;</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvReleaseMemStorage(&amp;storage);</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvReleaseImage(&amp;img);</b></span><br>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span>cvReleaseImage(&amp;imgGrayScale);</b></span><br>
<span style="line-height: 21.96875px;"><b><br></b></span>
<span style="line-height: 21.96875px;"><b><span class="Apple-tab-span" style="white-space: pre;"> </span><span style="color: blue;">return</span> 0;</b></span><br>
<span style="line-height: 21.96875px;"><b>}</b></span></div>
<div>
<span style="line-height: 21.981481552124023px;"><br></span></div>
<div>
<span style="line-height: 21.981481552124023px;"><br></span></div>
<div>
<span style="line-height: 21.981481552124023px;">///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</span>
<br>
<span style="line-height: 21.981481552124023px;"><span style="background-color: white; color: #222222; line-height: 18px;">You can download this OpenCV visual c++ project from&nbsp;</span><a href="https://www.box.com/s/7of56nkoy8j2dbt6mqrx" rel="nofollow" target="_blank">here</a><span style="background-color: white; color: #222222; line-height: 18px;">.&nbsp;</span><span class="Apple-style-span" style="background-color: white; color: #222222; line-height: 22px;">(The downloaded file is a compressed .rar folder. So, you have to extract it using&nbsp;<a href="http://www.win-rar.com/" style="color: #888888; text-decoration: initial;" target="_blank">Winrar</a>&nbsp;or other suitable software)</span></span><br>
<span style="line-height: 21.981481552124023px;"><span class="Apple-style-span" style="background-color: white; color: #222222; line-height: 22px;"><br></span></span>
<br>
<table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody>
<tr><td style="text-align: center;"><a href="https://2.bp.blogspot.com/-r-tDWk1gW6A/UQK-UoWnkXI/AAAAAAAAARA/ORjC3CAXkDY/s1600/Grayscale_Image.jpg" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img alt="converted to gray scale Image with OpenCV cvCvtColor function" border="0" height="320" src="./video_files/Grayscale_Image.jpg" title="Gray scale Image" width="400"></a></td></tr>
<tr><td class="tr-caption" style="text-align: center;">Gray scale&nbsp;Image</td></tr>
</tbody></table>
<br>
<table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody>
<tr><td style="text-align: center;"><a href="https://2.bp.blogspot.com/-Vgu-EyhwF3U/UQK-WGVDaII/AAAAAAAAARI/oEuOgQtHd8s/s1600/Thresholded_Image.jpg" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img alt="Thresholded the image using OpenCV cvThreshold function" border="0" height="320" src="./video_files/Thresholded_Image.jpg" title="Thresholded Image" width="400"></a></td></tr>
<tr><td class="tr-caption" style="text-align: center;">Thresholded&nbsp;Image</td></tr>
</tbody></table>
<br>
<table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody>
<tr><td style="text-align: center;"><a href="https://3.bp.blogspot.com/-w3-FVFvP8HY/UQK-YWNx4xI/AAAAAAAAARQ/pLxjDghvnxw/s1600/Triangle_Deteced.jpg" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img alt="Triangles Detected with OpenCV using contours with 3 vertices" border="0" height="320" src="./video_files/Triangle_Deteced.jpg" title="Triangles Detected" width="400"></a></td></tr>
<tr><td class="tr-caption" style="text-align: center;">Triangles Detected</td></tr>
</tbody></table>
<br>
<br>
<span style="line-height: 21.96875px;"><span style="font-family: Verdana, sans-serif;">In the same way, any shapes with any sizes can be detected with OpenCV.</span></span><br>
<span style="line-height: 21.96875px;"><br></span>
<b style="background-color: white; color: #bf9000; font-family: Verdana, sans-serif; font-size: x-large; line-height: 22px;"><br></b>
<b style="background-color: white; color: #bf9000; font-family: Verdana, sans-serif; font-size: x-large; line-height: 22px;">Explanation</b><br>
<b style="background-color: white; color: #bf9000; font-family: Verdana, sans-serif; font-size: x-large; line-height: 22px;"><br></b>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.96875px;">To reduce the noise level of the original image, I have smoothed the original image with a Gaussian kernel.&nbsp;</span></span><br>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.96875px;">Further you can change the 5th&nbsp;argument&nbsp;of&nbsp;</span></span><b style="line-height: 21.96875px;">cvApproxPoly()&nbsp;</b><span style="line-height: 21.96875px;"><span style="font-family: Verdana, sans-serif;">function to cope with the noise. In the above example, I have used&nbsp;</span></span><b style="line-height: 21.96875px;">cvContourPerimeter(contour)*0.02 </b><span style="line-height: 21.96875px;"><span style="font-family: Verdana, sans-serif;">as the 5th argument of&nbsp;</span></span><b style="line-height: 21.96875px;">cvApproxPoly()</b><span style="font-family: Verdana, sans-serif; line-height: 21.96875px;">. You can try&nbsp;</span><b style="line-height: 21.96875px;">cvContourPerimeter(contour)*0.01&nbsp;</b><span style="font-family: Verdana, sans-serif; line-height: 21.96875px;">or&nbsp;</span><b style="line-height: 21.96875px;">cvContourPerimeter(contour)*0.04 </b><span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.96875px;">or any other value and see the difference of the output&nbsp;yourselves.</span></span><br>
<span style="background-color: white;"><span style="font-family: Verdana, sans-serif;"><span style="line-height: 22px;">Still there may be very small triangles, formed due to the noise. Therefore all triangles with areas less than 100 pixels are filtered out.&nbsp;</span></span></span><br>
<br>
<span style="font-family: Verdana, sans-serif;">Here are the new OpenCV&nbsp;functions, found in the above example.</span><br>
<ul>
<li><b style="line-height: 21.96875px;"><span style="font-family: Verdana, sans-serif;"><b style="font-family: &#39;Times New Roman&#39;;"><span style="font-family: Verdana, sans-serif;">cvContourArea(const CvArr* contour, CvSlice slice)</span></b></span></b></li>
</ul>
<div>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.96875px;">Calculate the area enclosed by sequence of contour points.&nbsp;</span></span></div>
<div>
<ul><ul>
<li><span style="line-height: 21.96875px;"><span style="font-family: Verdana, sans-serif;">const CvArr* contour - array of vertices of the contour</span></span></li>
<li><span style="line-height: 21.96875px;"><span style="font-family: Verdana, sans-serif;"><span style="font-family: &#39;Times New Roman&#39;;"><span style="font-family: Verdana, sans-serif;"><span style="font-family: &#39;Times New Roman&#39;;"><span style="font-family: Verdana, sans-serif;">CvSlice slice - starting and ending point of the contour. 'CV_WHOLE_SEQ' will take the whole contour to calculate the area</span></span></span></span></span></span></li>
</ul>
</ul>
</div>
<div>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.96875px;">The orientation of contour affects the area sign. So, this function may return a negative value. So, it should be used fabs() function to get the absolute value.</span></span></div>
<div>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.96875px;"><b><br></b></span></span></div>
<ul>
<li><b style="line-height: 21.96875px;"><span style="font-family: Verdana, sans-serif;">fabs(double x)</span></b></li>
</ul>
<br>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.981481552124023px;">This&nbsp;</span><span style="line-height: 21.96875px;">function</span><span style="line-height: 21.981481552124023px;">&nbsp;returns the absolute value of any floating point number. ( This is a C function, not a OpenCV function)</span></span><span style="line-height: 21.981481552124023px;"></span><br>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.981481552124023px;"><br></span></span>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.981481552124023px;"><br><span style="color: #b45f06; font-size: large;"><b>Tracking two Triangles in a Video</b></span></span></span><br>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.981481552124023px;"><span style="color: #b45f06; font-size: large;"><b><br></b></span></span></span><span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.981481552124023px;">Here I am going to track the two triangles in a video. The blue triangle is marked with red and the green triangle is marked with blue.</span></span>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.981481552124023px;"><span style="color: #b45f06; font-size: large;"><b><br></b></span></span></span>
<span style="font-family: Verdana, sans-serif;"><b></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="font-family: &#39;Times New Roman&#39;; font-weight: normal; line-height: 21.96875px;">///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span style="color: blue;">#include</span> <span style="color: red;">"stdafx.h"</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span style="color: blue;">#include</span> <span style="color: red;">&lt;cv.h&gt;</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span style="color: blue;">#include</span> <span style="color: red;">&lt;highgui.h&gt;</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span style="color: blue;">using namespace</span> std;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">IplImage* imgTracking=0;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span style="color: blue;">int</span> lastX1 = -1;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span style="color: blue;">int</span> lastY1 = -1;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span style="color: blue;">int</span> lastX2 = -1;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span style="color: blue;">int</span> lastY2 = -1;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span style="color: blue;">void</span> trackObject(IplImage* imgThresh){</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">        </span>CvSeq* contour; &nbsp;<span style="color: #38761d;">//hold the pointer to a contour</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">        </span>CvSeq* result; &nbsp; &nbsp; <span style="color: #38761d;">//hold sequence of points of a contour</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">        </span>CvMemStorage *storage = cvCreateMemStorage(0); <span style="color: #38761d;">//storage area for all contours</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span class="Apple-tab-span" style="line-height: 21.96875px; white-space: pre;"> </span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">        </span><span style="color: #38761d;">//finding all contours in the image</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">        </span>cvFindContours(imgThresh, storage, &amp;contour, <span style="color: blue;">sizeof</span>(CvContour), CV_RETR_LIST, CV_CHAIN_APPROX_SIMPLE, cvPoint(0,0));</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span class="Apple-tab-span" style="line-height: 21.96875px; white-space: pre;">  </span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">       </span><span style="color: #38761d;">//iterating through each contour</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">       </span><span style="color: blue;">while</span>(contour)</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">       </span>{</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">        </span><span style="color: #38761d;">//obtain a sequence of points of the countour, pointed by the variable 'countour'</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">       </span>result = cvApproxPoly(contour, <span style="color: blue;">sizeof</span>(CvContour), storage, CV_POLY_APPROX_DP, cvContourPerimeter(contour)*0.02, 0);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">    </span> &nbsp; &nbsp; &nbsp;&nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">       </span><span style="color: #38761d;">//if there are 3 vertices &nbsp;in the contour and the area of the triangle is more than 100 pixels</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">       </span><span style="color: blue;">if</span>(result-&gt;total==3 &amp;&amp; fabs(cvContourArea(result, CV_WHOLE_SEQ))&gt;100 )</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">       </span>{</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">              </span><span style="color: #38761d;">//iterating through each point</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">              </span>CvPoint *pt[3];</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">              </span><span style="color: blue;">for</span>(<span style="color: blue;">int</span> i=0;i&lt;3;i++){</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">                   </span>pt[i] = (CvPoint*)cvGetSeqElem(result, i);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">              </span>}</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span class="Apple-tab-span" style="line-height: 21.96875px; white-space: pre;">   </span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">               </span><span style="color: blue;">int</span> posX=( pt[0]-&gt;x + pt[1]-&gt;x + pt[2]-&gt;x )/3;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">               </span><span style="color: blue;">int</span> posY=( pt[0]-&gt;y + pt[1]-&gt;y + pt[2]-&gt;y )/3;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">               </span><span style="color: blue;">if</span>(posX &gt; 360 ){</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">                   </span><span style="color: blue;">if</span>(lastX1&gt;=0 &amp;&amp; lastY1&gt;=0 &amp;&amp; posX&gt;=0 &amp;&amp; posY&gt;=0)</span></b></span><b style="font-family: Verdana, sans-serif;"><span style="line-height: 21.96875px;">{</span></b><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">                       </span><span style="color: #38761d;">// Draw a red line from the previous point to the current point</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">                       </span>cvLine(imgTracking, cvPoint(posX, posY), cvPoint(lastX1, lastY1), cvScalar(0,0,255), 4);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">                   </span>}</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">                    </span>lastX1 = posX;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">                    </span>lastY1 = posY;<span class="Apple-tab-span" style="white-space: pre;">  </span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">               </span>}</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">               </span><span style="color: blue;">else</span>{</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">                    </span><span style="color: blue;">if</span>(lastX2&gt;=0 &amp;&amp; lastY2&gt;=0 &amp;&amp; posX&gt;=0 &amp;&amp; posY&gt;=0)</span></b></span><b style="font-family: Verdana, sans-serif;"><span style="line-height: 21.96875px;">{</span></b><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">                        </span><span style="color: #38761d;">// Draw a blue line from the previous point to the current point</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">                         </span>cvLine(imgTracking, cvPoint(posX, posY), cvPoint(lastX2, lastY2), cvScalar(255,0,0), 4);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">                     </span>}</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">                      </span>lastX2 = posX;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">                      </span>lastY2 = posY;<span class="Apple-tab-span" style="white-space: pre;"> </span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">                 </span>}</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">            </span>}</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span class="Apple-tab-span" style="line-height: 21.96875px; white-space: pre;">  </span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">            </span><span style="color: #38761d;">//obtain the next contour</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">            </span>contour = contour-&gt;h_next;<span class="Apple-tab-span" style="white-space: pre;"> </span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">      </span>}</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">      </span>cvReleaseMemStorage(&amp;storage);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">}</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span style="color: blue;">int</span> main(){</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; <span style="color: #38761d;">//load the video file to the memory</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">    </span>CvCapture *capture = &nbsp; &nbsp; cvCaptureFromAVI(<span style="color: red;">"E:/Projects/Robot/IESL Robot/robot/a.avi"</span>);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; <span style="color: blue;">if</span>(!capture){</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; printf(<span style="color: red;">"Capture failure\n"</span>);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: blue;">return</span> -1;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; }</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp;&nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; IplImage* frame=0;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; frame = cvQueryFrame(capture); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; <span style="color: blue;">if</span>(!frame) return -1;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; <span style="color: #38761d;">//create a blank image and assigned to 'imgTracking' which has the same size of original video</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; imgTracking=cvCreateImage(cvGetSize(frame),IPL_DEPTH_8U, 3);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; cvZero(imgTracking); <span style="color: #38761d;">//covert the image, 'imgTracking' to black</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; cvNamedWindow(<span style="color: red;">"Video"</span>); &nbsp; &nbsp;&nbsp;</span></b></span><br>
<br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">    </span><span style="color: #38761d;">//iterate through each frames of the video</span> &nbsp; &nbsp;&nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp;<span style="color: blue;"> while</span>(<span style="color: blue;">true</span>){</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; frame = cvQueryFrame(capture); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: blue;">if</span>(!frame) <span style="color: blue;">break</span>;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; frame=cvCloneImage(frame);&nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">        </span><span style="color: #38761d;">//smooth the original image using Gaussian kernel</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; cvSmooth(frame, frame, CV_GAUSSIAN,3,3);&nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">       </span><span style="color: #38761d;">//converting the original image into grayscale</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">      </span>IplImage* imgGrayScale = cvCreateImage(cvGetSize(frame), 8, 1);&nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">      </span>cvCvtColor(frame,imgGrayScale,CV_BGR2GRAY);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp;<span style="color: #38761d;">//thresholding the grayscale image to get better results</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><span class="Apple-tab-span" style="white-space: pre;">       </span>cvThreshold(imgGrayScale,imgGrayScale,100,255,CV_THRESH_BINARY_INV);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #38761d;">//track the possition of the ball</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; trackObject(imgGrayScale);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #38761d;">// Add the tracking image and the frame</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; cvAdd(frame, imgTracking, frame);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; cvShowImage(<span style="color: red;">"Video"</span>, frame);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #38761d;">//Clean up used images</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; cvReleaseImage(&amp;imgGrayScale); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; cvReleaseImage(&amp;frame);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp;<span style="color: #38761d;"> //Wait 10mS</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: blue;">int</span> c = cvWaitKey(10);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: #38761d;">//If 'ESC' is pressed, break the loop</span></span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; &nbsp; &nbsp; <span style="color: blue;">if</span>((<span style="color: blue;">char</span>)c==27 ) <span style="color: blue;">break</span>; &nbsp; &nbsp; &nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; }</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; cvDestroyAllWindows();</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; cvReleaseImage(&amp;imgTracking);</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; cvReleaseCapture(&amp;capture); &nbsp; &nbsp;&nbsp;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;"><br></span></b></span>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">&nbsp; &nbsp; <span style="color: blue;">return</span> 0;</span></b></span><br>
<span style="font-family: Verdana, sans-serif;"><b><span style="line-height: 21.96875px;">}</span></b></span><br>
<div style="line-height: 21.981481552124023px;">
<span style="font-family: Verdana, sans-serif;"><b><span style="font-family: &#39;Times New Roman&#39;; font-weight: normal;">///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</span></b></span></div>
<div style="line-height: 21.981481552124023px;">
<span style="font-family: Verdana, sans-serif;"><b><span style="background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; font-weight: normal; line-height: 18px;">You can download this OpenCV visual c++ project from&nbsp;</span><a href="https://www.box.com/s/h8czntxa58hu6hpsnyu4" rel="nofollow" style="background-color: white; color: #888888; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; font-weight: normal; text-decoration: initial;" target="_blank">here</a><span style="background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; font-weight: normal; line-height: 18px;">.&nbsp;</span><span class="Apple-style-span" style="background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 13px; font-weight: normal; line-height: 22px;">(The downloaded file is a compressed .rar folder. So, you have to extract it using&nbsp;<a href="http://www.win-rar.com/" style="color: #888888; text-decoration: initial;" target="_blank">Winrar</a>&nbsp;or other suitable software)</span></b></span></div>
<br>
<div class="separator" style="clear: both; text-align: center;">
<iframe allowfullscreen="allowfullscreen" class="b-hbp-video b-uploaded" frameborder="0" height="266" id="BLOGGER-video-665780535fb13148-1911" mozallowfullscreen="mozallowfullscreen" src="./video_files/video.html" webkitallowfullscreen="webkitallowfullscreen" width="320" style=""></iframe></div>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.981481552124023px;"><span style="color: #b45f06; font-size: large;"><b><br></b></span></span></span><b style="background-color: white; font-family: Verdana, sans-serif; line-height: 22px;"></b><b style="background-color: white; font-family: Verdana, sans-serif; line-height: 22px;"></b><b style="background-color: white; font-family: Verdana, sans-serif; line-height: 22px;"></b><b style="background-color: white; font-family: Verdana, sans-serif; line-height: 22px;"></b><span style="font-family: Verdana, sans-serif;"><span style="color: #bf9000; font-size: large; line-height: 21.981481552124023px;"><b>Explanation</b></span></span><br>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.981481552124023px;"><br></span></span>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.981481552124023px;">You already know how to obtain 3 vertices of a triangle with OpenCV. Averaging those 3 vertices gives you the center point of the triangle. So, it is easy to track triangles in a video.</span></span><br>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.981481552124023px;">Then, how do you identify two similar triangles&nbsp;</span><span style="line-height: 21.96875px;">separately? Here I have used a simple trick. I know that the green triangle always is in the left side of the video and the blue triangle is in the right side of the video. So, if the x coordinate of a triangle is more than (frame width)/2 = 360, then it is the blue triangle, otherwise it is the green triangle.</span></span>
<span style="font-family: Verdana, sans-serif;"><span style="line-height: 21.981481552124023px;"><br></span></span>
<br>
<div style="line-height: normal;">
<span style="line-height: 21.981481552124023px;"><span style="background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif;"><b><span style="font-family: Verdana, sans-serif;"><span class="Apple-style-span" style="color: #bf9000;"><span style="color: black;">Next Tutorial :&nbsp;</span></span></span></b></span></span></div>
<div style="line-height: normal;">
<span style="line-height: 21.981481552124023px;"><br></span></div>
<div style="line-height: normal;">
<span style="line-height: 21.981481552124023px;"><span style="background-color: white; color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif;"><b><span style="font-family: Verdana, sans-serif;"><span class="Apple-style-span" style="color: #bf9000;"><span style="color: black;">Previous Tutorial :&nbsp;</span></span></span></b></span><b style="color: #222222; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif;"><span style="font-family: Verdana, sans-serif;"><span class="Apple-style-span" style="color: #bf9000;"><span style="color: black; font-size: large;"><a href="http://opencv-srf.blogspot.com/2010/09/object-detection-using-color-seperation.html" target="_blank">Object Detection &amp; Tracking Using Color</a>&nbsp;</span></span></span></b></span></div>
</div>
</div>
</div>
</div>
</div>
<div style="clear: both;"></div>
</div>
<div class="post-footer">
<div class="post-footer-line post-footer-line-1"><span class="post-author vcard">
Posted by
<span class="fn">Shermal Fernando</span>
</span>
<span class="post-comment-link">
</span>
<span class="post-icons">
<span class="item-control blog-admin pid-1264073628">
<a href="https://www.blogger.com/post-edit.g?blogID=1182128440772477840&amp;postID=6871903895490733007&amp;from=pencil" title="Edit Post">
<img alt="" class="icon-action" height="18" src="./video_files/icon18_edit_allbkg.gif" width="18">
</a>
</span>
</span>
<div class="post-share-buttons goog-inline-block">
<a class="goog-inline-block share-button sb-email" href="https://www.blogger.com/share-post.g?blogID=1182128440772477840&amp;postID=6871903895490733007&amp;target=email" target="_blank" title="Email This"><span class="share-button-link-text">Email This</span></a><a class="goog-inline-block share-button sb-blog" href="https://www.blogger.com/share-post.g?blogID=1182128440772477840&amp;postID=6871903895490733007&amp;target=blog" onclick="window.open(this.href, &quot;_blank&quot;, &quot;height=270,width=475&quot;); return false;" target="_blank" title="BlogThis!"><span class="share-button-link-text">BlogThis!</span></a><a class="goog-inline-block share-button sb-twitter" href="https://www.blogger.com/share-post.g?blogID=1182128440772477840&amp;postID=6871903895490733007&amp;target=twitter" target="_blank" title="Share to Twitter"><span class="share-button-link-text">Share to Twitter</span></a><a class="goog-inline-block share-button sb-facebook" href="https://www.blogger.com/share-post.g?blogID=1182128440772477840&amp;postID=6871903895490733007&amp;target=facebook" onclick="window.open(this.href, &quot;_blank&quot;, &quot;height=430,width=640&quot;); return false;" target="_blank" title="Share to Facebook"><span class="share-button-link-text">Share to Facebook</span></a><a class="goog-inline-block share-button sb-pinterest" href="https://www.blogger.com/share-post.g?blogID=1182128440772477840&amp;postID=6871903895490733007&amp;target=pinterest" target="_blank" title="Share to Pinterest"><span class="share-button-link-text">Share to Pinterest</span></a><div class="goog-inline-block google-plus-share-container"><div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 32px; height: 20px;"><iframe ng-non-bindable="" frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 32px; margin: 0px; border-style: none; left: 0px; height: 20px;" tabindex="0" vspace="0" width="100%" id="I0_1525836257208" name="I0_1525836257208" src="./video_files/fastbutton.html" data-gapiattached="true" title="G+"></iframe></div></div>
</div>
</div>
<div class="post-footer-line post-footer-line-2"></div>
<div class="post-footer-line post-footer-line-3"><span class="reaction-buttons">
</span>
</div>
</div>
</div>
<div class="comments" id="comments">
<a name="comments"></a>
<h4>11 comments:</h4>
<div class="comments-content">
<script async="async" src="./video_files/comments.js" type="text/javascript"></script>
<script type="text/javascript">
    (function() {
      var items = [{'id': '2168148662796755209', 'body': '\x3cbr /\x3estring FindObject(string  screenshot, string testimg){\x3cbr /\x3e\x3cbr /\x3e int x \x3d 0;\x3cbr /\x3e int y \x3d 0;\x3cbr /\x3e int Xcoordinates \x3d 0;\x3cbr /\x3e int Ycoordinates \x3d 0;\x3cbr /\x3e cv::Mat ref \x3d cv::imread(screenshot);\x3cbr /\x3e cv::Mat tpl \x3d cv::imread(testimg);\x3cbr /\x3e if (ref.empty() || tpl.empty())\x3cbr /\x3e  return \x26quot;-1\x26quot;;\x3cbr /\x3e\x3cbr /\x3e cv::Mat gref, gtpl;\x3cbr /\x3e cv::cvtColor(ref, gref, CV_BGR2GRAY);\x3cbr /\x3e cv::cvtColor(tpl, gtpl, CV_BGR2GRAY);\x3cbr /\x3e\x3cbr /\x3e cv::Mat res(ref.rows - tpl.rows + 1, ref.cols - tpl.cols + 1, CV_32FC1);\x3cbr /\x3e cv::matchTemplate(gref, gtpl, res, CV_TM_CCOEFF_NORMED);\x3cbr /\x3e cv::threshold(res, res, 0.8, 1., CV_THRESH_TOZERO);\x3cbr /\x3e\x3cbr /\x3e while (true)\x3cbr /\x3e {\x3cbr /\x3e  double minval, maxval, threshold \x3d 0.8;\x3cbr /\x3e  cv::Point minloc, maxloc;\x3cbr /\x3e\x3cbr /\x3e  cv::minMaxLoc(res, \x26amp;minval, \x26amp;maxval, \x26amp;minloc, \x26amp;maxloc);\x3cbr /\x3e\x3cbr /\x3e  if (maxval \x26gt;\x3d threshold)\x3cbr /\x3e  {\x3cbr /\x3e   cv::rectangle(\x3cbr /\x3e    ref,\x3cbr /\x3e    maxloc,\x3cbr /\x3e    cv::Point(maxloc.x + tpl.cols, maxloc.y + tpl.rows),\x3cbr /\x3e    CV_RGB(0, 255, 0), 2\x3cbr /\x3e    );\x3cbr /\x3e   cout \x26lt;\x26lt; \x26quot;Max +tpl--\x26gt;X  : \x26quot; \x26lt;\x26lt; maxloc.x + tpl.cols \x26lt;\x26lt; endl;\x3cbr /\x3e   cout \x26lt;\x26lt; \x26quot;Max +tpl--\x26gt;y : \x26quot; \x26lt;\x26lt; maxloc.y + tpl.rows \x26lt;\x26lt; endl;\x3cbr /\x3e   cout \x26lt;\x26lt; \x26quot; Max--\x26gt;X: \x26quot; \x26lt;\x26lt; maxloc.x \x26lt;\x26lt; endl;\x3cbr /\x3e   cout \x26lt;\x26lt; \x26quot;Max--\x26gt;y : \x26quot; \x26lt;\x26lt; maxloc.y \x26lt;\x26lt; endl;\x3cbr /\x3e   cout \x26lt;\x26lt; \x26quot;tpl--\x26gt;X  : \x26quot; \x26lt;\x26lt; tpl.cols \x26lt;\x26lt; endl;\x3cbr /\x3e   cout \x26lt;\x26lt; \x26quot;tpl--\x26gt;y : \x26quot; \x26lt;\x26lt; tpl.rows \x26lt;\x26lt; endl;\x3cbr /\x3e\x3cbr /\x3e       Xcoordinates \x3d (maxloc.x + tpl.cols + maxloc.x) / 2;\x3cbr /\x3e    Ycoordinates \x3d (maxloc.y + tpl.rows + maxloc.y) / 2;\x3cbr /\x3e   cout \x26lt;\x26lt; \x26quot;***************Xcoordinates************\x26quot; \x26lt;\x26lt; Xcoordinates \x26lt;\x26lt; endl;\x3cbr /\x3e   cout \x26lt;\x26lt; \x26quot;***************Ycoordinates************\x26quot; \x26lt;\x26lt; Ycoordinates \x26lt;\x26lt; endl;\x3cbr /\x3e\x3cbr /\x3e\x3cbr /\x3e   cv::floodFill(res, maxloc, cv::Scalar(0),\x3cbr /\x3e    0, cv::Scalar(.1), cv::Scalar(1.));\x3cbr /\x3e  }\x3cbr /\x3e  else\x3cbr /\x3e   break;\x3cbr /\x3e }\x3cbr /\x3e\x3cbr /\x3e int a \x3d Xcoordinates;\x3cbr /\x3e stringstream ss;\x3cbr /\x3e ss \x26lt;\x26lt; a;\x3cbr /\x3e string Xco \x3d ss.str();\x3cbr /\x3e\x3cbr /\x3e int b \x3d Ycoordinates;\x3cbr /\x3e stringstream kk;\x3cbr /\x3e kk \x26lt;\x26lt; b;\x3cbr /\x3e string Yco \x3d kk.str();\x3cbr /\x3e\x3cbr /\x3e\x3cbr /\x3e string coordinates \x3d Xco + \x26quot;*\x26quot; + Yco;\x3cbr /\x3e\x3cbr /\x3e //cv::imshow(\x26quot;reference\x26quot;, ref);\x3cbr /\x3e\x3cbr /\x3e //cv::imwrite(\x26quot;rgb.jpg\x26quot;, ref);\x3cbr /\x3e\x3cbr /\x3e cv::waitKey();\x3cbr /\x3e\x3cbr /\x3e return coordinates;\x3cbr /\x3e}\x3cbr /\x3e', 'timestamp': '1501217146470', 'permalink': 'https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment\x3d1501217146470#c2168148662796755209', 'author': {'name': 'RAGHU RAM REDDY', 'avatarUrl': '//lh5.googleusercontent.com/-LljLUrFpFCs/AAAAAAAAAAI/AAAAAAAAA5U/mlrmsonOnfs/s35-c/photo.jpg', 'profileUrl': 'https://www.blogger.com/profile/00132312757002259426'}, 'displayTime': 'July 28, 2017 at 10:15 AM', 'deleteclass': 'item-control blog-admin pid-1728177568'}, {'id': '6878341760947947611', 'body': '#include \x3cbr /\x3e#include \x3cbr /\x3e#include \x3cbr /\x3e#include \x3cbr /\x3eusing namespace cv;\x3cbr /\x3eusing namespace std;\x3cbr /\x3e\x3cbr /\x3eint main(int argc, const char** argv)\x3cbr /\x3e{\x3cbr /\x3e Mat img \x3d imread(\x26quot;Abdul_kalam.JPG\x26quot;, CV_LOAD_IMAGE_GRAYSCALE); //read the image data in the file \x26quot;MyPic.JPG\x26quot; and store it in \x26#39;img\x26#39;\x3cbr /\x3e\x3cbr /\x3e if (img.empty()) //check whether the image is loaded or not\x3cbr /\x3e {\x3cbr /\x3e  cout \x26lt;\x26lt; \x26quot;Error : Image cannot be loaded..!!\x26quot; \x26lt;\x26lt; endl;\x3cbr /\x3e  //system(\x26quot;pause\x26quot;); //wait for a key press\x3cbr /\x3e  return -1;\x3cbr /\x3e }\x3cbr /\x3e Mat_ kernel(3, 3);\x3cbr /\x3e kernel \x26lt;\x26lt; 1, 0, -1, 2, 0, -2, 1, 0, -1;\x3cbr /\x3e\x3cbr /\x3e // or, if the Mat_ is too weird for you, like this:\x3cbr /\x3e //float kdata[] \x3d { 1, 4, 6, -1, 3, 5, -1, -2, 2 };\x3cbr /\x3e //Mat kernel(3, 3, CV_32F, kdata);\x3cbr /\x3e\x3cbr /\x3e Mat image \x3d imread(\x26quot;Abdul_kalam.JPG\x26quot;, CV_LOAD_IMAGE_GRAYSCALE);\x3cbr /\x3e  \x3cbr /\x3e  Mat res;\x3cbr /\x3e filter2D(image, res, CV_32F, kernel);\x3cbr /\x3e namedWindow(\x26quot;MyWindow\x26quot;); //create a window with the name \x26quot;MyWindow\x26quot;\x3cbr /\x3e imshow(\x26quot;MyWindow\x26quot;, res); //display the image which is stored in the \x26#39;img\x26#39; in the \x26quot;MyWindow\x26quot; window\x3cbr /\x3e\x3cbr /\x3e waitKey(0); //wait infinite time for a keypress\x3cbr /\x3e\x3cbr /\x3e destroyWindow(\x26quot;MyWindow\x26quot;); //destroy the window with the name, \x26quot;MyWindow\x26quot;\x3cbr /\x3e\x3cbr /\x3e return 0;\x3cbr /\x3e}', 'timestamp': '1504783682086', 'permalink': 'https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment\x3d1504783682086#c6878341760947947611', 'author': {'name': 'RAGHU RAM REDDY', 'avatarUrl': '//lh5.googleusercontent.com/-LljLUrFpFCs/AAAAAAAAAAI/AAAAAAAAA5U/mlrmsonOnfs/s35-c/photo.jpg', 'profileUrl': 'https://www.blogger.com/profile/00132312757002259426'}, 'displayTime': 'September 7, 2017 at 4:58 PM', 'deleteclass': 'item-control blog-admin pid-1728177568'}, {'id': '7623063182273581643', 'body': 'for (int j\x3d0; j(j,i)[0]\x3d\x3cbr /\x3eimage.at(j,i)[0]/div*div + div/2;\x3cbr /\x3eimage.at(j,i)[1]\x3d\x3cbr /\x3eimage.at(j,i)[1]/div*div + div/2;\x3cbr /\x3eimage.at(j,i)[2]\x3d\x3cbr /\x3eimage.at(j,i)[2]/div*div + div/2;\x3cbr /\x3e} // end of line\x3cbr /\x3e}', 'timestamp': '1504784421515', 'permalink': 'https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment\x3d1504784421515#c7623063182273581643', 'author': {'name': 'RAGHU RAM REDDY', 'avatarUrl': '//lh5.googleusercontent.com/-LljLUrFpFCs/AAAAAAAAAAI/AAAAAAAAA5U/mlrmsonOnfs/s35-c/photo.jpg', 'profileUrl': 'https://www.blogger.com/profile/00132312757002259426'}, 'displayTime': 'September 7, 2017 at 5:10 PM', 'deleteclass': 'item-control blog-admin pid-1728177568'}, {'id': '6933726746031979877', 'body': 'could offer avi file? please', 'timestamp': '1506395683605', 'permalink': 'https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment\x3d1506395683605#c6933726746031979877', 'author': {'name': '安東尼', 'avatarUrl': '//lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA\x3ds35', 'profileUrl': 'https://www.blogger.com/profile/02773821085693049573'}, 'displayTime': 'September 26, 2017 at 8:44 AM', 'deleteclass': 'item-control blog-admin pid-1035281217'}, {'id': '8831792691873463133', 'body': 'i need the video in the last project \x26quot;Tracking two Triangles in a Video\x26quot;', 'timestamp': '1510946351926', 'permalink': 'https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment\x3d1510946351926#c8831792691873463133', 'author': {'name': 'Bassel Al-azab', 'avatarUrl': '//lh6.googleusercontent.com/-Q26w9aEROG4/AAAAAAAAAAI/AAAAAAAAAfM/3-OL5MiVpek/s35-c/photo.jpg', 'profileUrl': 'https://www.blogger.com/profile/00544631053377604583'}, 'displayTime': 'November 18, 2017 at 12:49 AM', 'deleteclass': 'item-control blog-admin pid-1155112695'}, {'id': '9150046620829352231', 'parentId': '8831792691873463133', 'body': 'Sorry Bassel, I don\x26#39;t have the video.', 'timestamp': '1510963345293', 'permalink': 'https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment\x3d1510963345293#c9150046620829352231', 'author': {'name': 'Shermal Fernando', 'avatarUrl': '//lh4.googleusercontent.com/-i42X-lvu8zI/AAAAAAAAAAI/AAAAAAAAAXs/QDw3cXaymQI/s35-c/photo.jpg', 'profileUrl': 'https://www.blogger.com/profile/16983244554428216643'}, 'displayTime': 'November 18, 2017 at 5:32 AM', 'deleteclass': 'item-control blog-admin pid-1264073628'}, {'id': '7576490452669652322', 'body': 'Great job! Congratulations!\x3cbr /\x3e', 'timestamp': '1511583845164', 'permalink': 'https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment\x3d1511583845164#c7576490452669652322', 'author': {'name': 'ARSLiber', 'avatarUrl': '//lh3.googleusercontent.com/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA\x3ds35', 'profileUrl': 'https://www.blogger.com/profile/01003829331380406474'}, 'displayTime': 'November 25, 2017 at 9:54 AM', 'deleteclass': 'item-control blog-admin pid-1950045714'}, {'id': '6818900935074947043', 'parentId': '7576490452669652322', 'body': 'Thank you', 'timestamp': '1511742249332', 'permalink': 'https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment\x3d1511742249332#c6818900935074947043', 'author': {'name': 'Shermal Fernando', 'avatarUrl': '//lh4.googleusercontent.com/-i42X-lvu8zI/AAAAAAAAAAI/AAAAAAAAAXs/QDw3cXaymQI/s35-c/photo.jpg', 'profileUrl': 'https://www.blogger.com/profile/16983244554428216643'}, 'displayTime': 'November 27, 2017 at 5:54 AM', 'deleteclass': 'item-control blog-admin pid-1264073628'}, {'id': '4465806949742030371', 'body': 'hi, i have a question about this, i&#180;m could track objets for his shape but in real time video? and i could detect if the object don&#180;t have a correct position?. I&#180;m very new in this so if could help me i would thank you ', 'timestamp': '1516830951097', 'permalink': 'https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment\x3d1516830951097#c4465806949742030371', 'author': {'name': 'BRANDON EDEN GONZALEZ PLATA', 'avatarUrl': '//lh6.googleusercontent.com/-AG8mOc1tQhE/AAAAAAAAAAI/AAAAAAAAFDI/7hx-5Ne9ClM/s35-c/photo.jpg', 'profileUrl': 'https://www.blogger.com/profile/04933161225735950528'}, 'displayTime': 'January 25, 2018 at 3:25 AM', 'deleteclass': 'item-control blog-admin pid-840506401'}, {'id': '3530411530256465066', 'parentId': '4465806949742030371', 'body': 'Yes, you can track objects in a video in a real time.', 'timestamp': '1516924254421', 'permalink': 'https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment\x3d1516924254421#c3530411530256465066', 'author': {'name': 'Shermal Fernando', 'avatarUrl': '//lh4.googleusercontent.com/-i42X-lvu8zI/AAAAAAAAAAI/AAAAAAAAAXs/QDw3cXaymQI/s35-c/photo.jpg', 'profileUrl': 'https://www.blogger.com/profile/16983244554428216643'}, 'displayTime': 'January 26, 2018 at 5:20 AM', 'deleteclass': 'item-control blog-admin pid-1264073628'}, {'id': '9024627605734577841', 'body': 'I want to count the number of pixel inside contour. Can you help me?\x3cbr /\x3e', 'timestamp': '1520667741730', 'permalink': 'https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment\x3d1520667741730#c9024627605734577841', 'author': {'name': 'Anonymous', 'avatarUrl': '//img1.blogblog.com/img/blank.gif', 'profileUrl': ''}, 'displayTime': 'March 10, 2018 at 1:12 PM', 'deleteclass': 'item-control blog-admin pid-323188942'}];
      var msgs = {'loadMore': 'Load more...', 'loading': 'Loading...', 'loaded': 'No more!', 'addComment': 'Add comment', 'reply': 'Reply', 'delete': 'Delete'};
      var config = {'blogId': '1182128440772477840', 'postId': '6871903895490733007', 'feed': 'https://www.opencv-srf.com/feeds/6871903895490733007/comments/default', 'authorName': 'Shermal Fernando', 'authorUrl': 'https://www.blogger.com/profile/16983244554428216643', 'baseUri': 'https://www.blogger.com', 'maxThreadDepth': 2};

// <![CDATA[
      var cursor = null;
      if (items && items.length > 0) {
        cursor = parseInt(items[items.length - 1].timestamp) + 1;
      }

      var bodyFromEntry = function(entry) {
        var text = (entry &&
                    ((entry.content && entry.content.$t) ||
                     (entry.summary && entry.summary.$t))) ||
            '';
        if (entry && entry.gd$extendedProperty) {
          for (var k in entry.gd$extendedProperty) {
            if (entry.gd$extendedProperty[k].name == 'blogger.contentRemoved') {
              return '<span class="deleted-comment">' + text + '</span>';
            }
          }
        }
        return text;
      }

      var parse = function(data) {
        cursor = null;
        var comments = [];
        if (data && data.feed && data.feed.entry) {
          for (var i = 0, entry; entry = data.feed.entry[i]; i++) {
            var comment = {};
            // comment ID, parsed out of the original id format
            var id = /blog-(\d+).post-(\d+)/.exec(entry.id.$t);
            comment.id = id ? id[2] : null;
            comment.body = bodyFromEntry(entry);
            comment.timestamp = Date.parse(entry.published.$t) + '';
            if (entry.author && entry.author.constructor === Array) {
              var auth = entry.author[0];
              if (auth) {
                comment.author = {
                  name: (auth.name ? auth.name.$t : undefined),
                  profileUrl: (auth.uri ? auth.uri.$t : undefined),
                  avatarUrl: (auth.gd$image ? auth.gd$image.src : undefined)
                };
              }
            }
            if (entry.link) {
              if (entry.link[2]) {
                comment.link = comment.permalink = entry.link[2].href;
              }
              if (entry.link[3]) {
                var pid = /.*comments\/default\/(\d+)\?.*/.exec(entry.link[3].href);
                if (pid && pid[1]) {
                  comment.parentId = pid[1];
                }
              }
            }
            comment.deleteclass = 'item-control blog-admin';
            if (entry.gd$extendedProperty) {
              for (var k in entry.gd$extendedProperty) {
                if (entry.gd$extendedProperty[k].name == 'blogger.itemClass') {
                  comment.deleteclass += ' ' + entry.gd$extendedProperty[k].value;
                } else if (entry.gd$extendedProperty[k].name == 'blogger.displayTime') {
                  comment.displayTime = entry.gd$extendedProperty[k].value;
                }
              }
            }
            comments.push(comment);
          }
        }
        return comments;
      };

      var paginator = function(callback) {
        if (hasMore()) {
          var url = config.feed + '?alt=json&v=2&orderby=published&reverse=false&max-results=50';
          if (cursor) {
            url += '&published-min=' + new Date(cursor).toISOString();
          }
          window.bloggercomments = function(data) {
            var parsed = parse(data);
            cursor = parsed.length < 50 ? null
                : parseInt(parsed[parsed.length - 1].timestamp) + 1
            callback(parsed);
            window.bloggercomments = null;
          }
          url += '&callback=bloggercomments';
          var script = document.createElement('script');
          script.type = 'text/javascript';
          script.src = url;
          document.getElementsByTagName('head')[0].appendChild(script);
        }
      };
      var hasMore = function() {
        return !!cursor;
      };
      var getMeta = function(key, comment) {
        if ('iswriter' == key) {
          var matches = !!comment.author
              && comment.author.name == config.authorName
              && comment.author.profileUrl == config.authorUrl;
          return matches ? 'true' : '';
        } else if ('deletelink' == key) {
          return config.baseUri + '/delete-comment.g?blogID='
               + config.blogId + '&postID=' + comment.id;
        } else if ('deleteclass' == key) {
          return comment.deleteclass;
        }
        return '';
      };

      var replybox = null;
      var replyUrlParts = null;
      var replyParent = undefined;

      var onReply = function(commentId, domId) {
        if (replybox == null) {
          // lazily cache replybox, and adjust to suit this style:
          replybox = document.getElementById('comment-editor');
          if (replybox != null) {
            replybox.height = '250px';
            replybox.style.display = 'block';
            replyUrlParts = replybox.src.split('#');
          }
        }
        if (replybox && (commentId !== replyParent)) {
          replybox.src = '';
          document.getElementById(domId).insertBefore(replybox, null);
          replybox.src = replyUrlParts[0]
              + (commentId ? '&parentID=' + commentId : '')
              + '#' + replyUrlParts[1];
          replyParent = commentId;
        }
      };

      var hash = (window.location.hash || '#').substring(1);
      var startThread, targetComment;
      if (/^comment-form_/.test(hash)) {
        startThread = hash.substring('comment-form_'.length);
      } else if (/^c[0-9]+$/.test(hash)) {
        targetComment = hash.substring(1);
      }

      // Configure commenting API:
      var configJso = {
        'maxDepth': config.maxThreadDepth
      };
      var provider = {
        'id': config.postId,
        'data': items,
        'loadNext': paginator,
        'hasMore': hasMore,
        'getMeta': getMeta,
        'onReply': onReply,
        'rendered': true,
        'initComment': targetComment,
        'initReplyThread': startThread,
        'config': configJso,
        'messages': msgs
      };

      var render = function() {
        if (window.goog && window.goog.comments) {
          var holder = document.getElementById('comment-holder');
          window.goog.comments.render(holder, provider);
        }
      };

      // render now, or queue to render when library loads:
      if (window.goog && window.goog.comments) {
        render();
      } else {
        window.goog = window.goog || {};
        window.goog.comments = window.goog.comments || {};
        window.goog.comments.loadQueue = window.goog.comments.loadQueue || [];
        window.goog.comments.loadQueue.push(render);
      }
    })();
// ]]>
  </script>
<div id="comment-holder">

<div id="bc_0_12C" kind="c"><div id="bc_0_12CT"><div id="bc_0_11T" class="comment-thread" kind="r" t="0" u="0"><ol id="bc_0_11TB"><li id="bc_0_0B" class="comment" kind="b"><div class="avatar-image-container"><img src="./video_files/photo.jpg"></div><div id="c2168148662796755209" class="comment-block"><div id="bc_0_0M" class="comment-header" kind="m"><cite class="user"><a rel="nofollow" href="https://www.blogger.com/profile/00132312757002259426">RAGHU RAM REDDY</a></cite><span class="icon user"></span><span class="datetime secondary-text"><a rel="nofollow" href="https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment=1501217146470#c2168148662796755209">July 28, 2017 at 10:15 AM</a></span></div><p id="bc_0_0MC" class="comment-content"><br>string FindObject(string  screenshot, string testimg){<br><br> int x = 0;<br> int y = 0;<br> int Xcoordinates = 0;<br> int Ycoordinates = 0;<br> cv::Mat ref = cv::imread(screenshot);<br> cv::Mat tpl = cv::imread(testimg);<br> if (ref.empty() || tpl.empty())<br>  return "-1";<br><br> cv::Mat gref, gtpl;<br> cv::cvtColor(ref, gref, CV_BGR2GRAY);<br> cv::cvtColor(tpl, gtpl, CV_BGR2GRAY);<br><br> cv::Mat res(ref.rows - tpl.rows + 1, ref.cols - tpl.cols + 1, CV_32FC1);<br> cv::matchTemplate(gref, gtpl, res, CV_TM_CCOEFF_NORMED);<br> cv::threshold(res, res, 0.8, 1., CV_THRESH_TOZERO);<br><br> while (true)<br> {<br>  double minval, maxval, threshold = 0.8;<br>  cv::Point minloc, maxloc;<br><br>  cv::minMaxLoc(res, &amp;minval, &amp;maxval, &amp;minloc, &amp;maxloc);<br><br>  if (maxval &gt;= threshold)<br>  {<br>   cv::rectangle(<br>    ref,<br>    maxloc,<br>    cv::Point(maxloc.x + tpl.cols, maxloc.y + tpl.rows),<br>    CV_RGB(0, 255, 0), 2<br>    );<br>   cout &lt;&lt; "Max +tpl--&gt;X  : " &lt;&lt; maxloc.x + tpl.cols &lt;&lt; endl;<br>   cout &lt;&lt; "Max +tpl--&gt;y : " &lt;&lt; maxloc.y + tpl.rows &lt;&lt; endl;<br>   cout &lt;&lt; " Max--&gt;X: " &lt;&lt; maxloc.x &lt;&lt; endl;<br>   cout &lt;&lt; "Max--&gt;y : " &lt;&lt; maxloc.y &lt;&lt; endl;<br>   cout &lt;&lt; "tpl--&gt;X  : " &lt;&lt; tpl.cols &lt;&lt; endl;<br>   cout &lt;&lt; "tpl--&gt;y : " &lt;&lt; tpl.rows &lt;&lt; endl;<br><br>       Xcoordinates = (maxloc.x + tpl.cols + maxloc.x) / 2;<br>    Ycoordinates = (maxloc.y + tpl.rows + maxloc.y) / 2;<br>   cout &lt;&lt; "***************Xcoordinates************" &lt;&lt; Xcoordinates &lt;&lt; endl;<br>   cout &lt;&lt; "***************Ycoordinates************" &lt;&lt; Ycoordinates &lt;&lt; endl;<br><br><br>   cv::floodFill(res, maxloc, cv::Scalar(0),<br>    0, cv::Scalar(.1), cv::Scalar(1.));<br>  }<br>  else<br>   break;<br> }<br><br> int a = Xcoordinates;<br> stringstream ss;<br> ss &lt;&lt; a;<br> string Xco = ss.str();<br><br> int b = Ycoordinates;<br> stringstream kk;<br> kk &lt;&lt; b;<br> string Yco = kk.str();<br><br><br> string coordinates = Xco + "*" + Yco;<br><br> //cv::imshow("reference", ref);<br><br> //cv::imwrite("rgb.jpg", ref);<br><br> cv::waitKey();<br><br> return coordinates;<br>}<br></p><span id="bc_0_0MN" class="comment-actions secondary-text" kind="m"><a kind="i" href="javascript:;" target="_self" o="r">Reply</a><span class="item-control blog-admin pid-1728177568"><a o="d" target="_self" href="https://www.blogger.com/delete-comment.g?blogID=1182128440772477840&amp;postID=2168148662796755209">Delete</a></span></span></div><div id="bc_0_0BR" class="comment-replies"></div><div id="bc_0_0B_box" class="comment-replybox-single"></div></li><li id="bc_0_1B" class="comment" kind="b"><div class="avatar-image-container"><img src="./video_files/photo.jpg"></div><div id="c6878341760947947611" class="comment-block"><div id="bc_0_1M" class="comment-header" kind="m"><cite class="user"><a rel="nofollow" href="https://www.blogger.com/profile/00132312757002259426">RAGHU RAM REDDY</a></cite><span class="icon user"></span><span class="datetime secondary-text"><a rel="nofollow" href="https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment=1504783682086#c6878341760947947611">September 7, 2017 at 4:58 PM</a></span></div><p id="bc_0_1MC" class="comment-content">#include <br>#include <br>#include <br>#include <br>using namespace cv;<br>using namespace std;<br><br>int main(int argc, const char** argv)<br>{<br> Mat img = imread("Abdul_kalam.JPG", CV_LOAD_IMAGE_GRAYSCALE); //read the image data in the file "MyPic.JPG" and store it in 'img'<br><br> if (img.empty()) //check whether the image is loaded or not<br> {<br>  cout &lt;&lt; "Error : Image cannot be loaded..!!" &lt;&lt; endl;<br>  //system("pause"); //wait for a key press<br>  return -1;<br> }<br> Mat_ kernel(3, 3);<br> kernel &lt;&lt; 1, 0, -1, 2, 0, -2, 1, 0, -1;<br><br> // or, if the Mat_ is too weird for you, like this:<br> //float kdata[] = { 1, 4, 6, -1, 3, 5, -1, -2, 2 };<br> //Mat kernel(3, 3, CV_32F, kdata);<br><br> Mat image = imread("Abdul_kalam.JPG", CV_LOAD_IMAGE_GRAYSCALE);<br>  <br>  Mat res;<br> filter2D(image, res, CV_32F, kernel);<br> namedWindow("MyWindow"); //create a window with the name "MyWindow"<br> imshow("MyWindow", res); //display the image which is stored in the 'img' in the "MyWindow" window<br><br> waitKey(0); //wait infinite time for a keypress<br><br> destroyWindow("MyWindow"); //destroy the window with the name, "MyWindow"<br><br> return 0;<br>}</p><span id="bc_0_1MN" class="comment-actions secondary-text" kind="m"><a kind="i" href="javascript:;" target="_self" o="r">Reply</a><span class="item-control blog-admin pid-1728177568"><a o="d" target="_self" href="https://www.blogger.com/delete-comment.g?blogID=1182128440772477840&amp;postID=6878341760947947611">Delete</a></span></span></div><div id="bc_0_1BR" class="comment-replies"></div><div id="bc_0_1B_box" class="comment-replybox-single"></div></li><li id="bc_0_2B" class="comment" kind="b"><div class="avatar-image-container"><img src="./video_files/photo.jpg"></div><div id="c7623063182273581643" class="comment-block"><div id="bc_0_2M" class="comment-header" kind="m"><cite class="user"><a rel="nofollow" href="https://www.blogger.com/profile/00132312757002259426">RAGHU RAM REDDY</a></cite><span class="icon user"></span><span class="datetime secondary-text"><a rel="nofollow" href="https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment=1504784421515#c7623063182273581643">September 7, 2017 at 5:10 PM</a></span></div><p id="bc_0_2MC" class="comment-content">for (int j=0; j(j,i)[0]=<br>image.at(j,i)[0]/div*div + div/2;<br>image.at(j,i)[1]=<br>image.at(j,i)[1]/div*div + div/2;<br>image.at(j,i)[2]=<br>image.at(j,i)[2]/div*div + div/2;<br>} // end of line<br>}</p><span id="bc_0_2MN" class="comment-actions secondary-text" kind="m"><a kind="i" href="javascript:;" target="_self" o="r">Reply</a><span class="item-control blog-admin pid-1728177568"><a o="d" target="_self" href="https://www.blogger.com/delete-comment.g?blogID=1182128440772477840&amp;postID=7623063182273581643">Delete</a></span></span></div><div id="bc_0_2BR" class="comment-replies"></div><div id="bc_0_2B_box" class="comment-replybox-single"></div></li><li id="bc_0_3B" class="comment" kind="b"><div class="avatar-image-container"><img src="./video_files/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35"></div><div id="c6933726746031979877" class="comment-block"><div id="bc_0_3M" class="comment-header" kind="m"><cite class="user"><a rel="nofollow" href="https://www.blogger.com/profile/02773821085693049573">安東尼</a></cite><span class="icon user"></span><span class="datetime secondary-text"><a rel="nofollow" href="https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment=1506395683605#c6933726746031979877">September 26, 2017 at 8:44 AM</a></span></div><p id="bc_0_3MC" class="comment-content">could offer avi file? please</p><span id="bc_0_3MN" class="comment-actions secondary-text" kind="m"><a kind="i" href="javascript:;" target="_self" o="r">Reply</a><span class="item-control blog-admin pid-1035281217"><a o="d" target="_self" href="https://www.blogger.com/delete-comment.g?blogID=1182128440772477840&amp;postID=6933726746031979877">Delete</a></span></span></div><div id="bc_0_3BR" class="comment-replies"></div><div id="bc_0_3B_box" class="comment-replybox-single"></div></li><li id="bc_0_5B" class="comment" kind="b"><div class="avatar-image-container"><img src="./video_files/photo(1).jpg"></div><div id="c8831792691873463133" class="comment-block"><div id="bc_0_5M" class="comment-header" kind="m"><cite class="user"><a rel="nofollow" href="https://www.blogger.com/profile/00544631053377604583">Bassel Al-azab</a></cite><span class="icon user"></span><span class="datetime secondary-text"><a rel="nofollow" href="https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment=1510946351926#c8831792691873463133">November 18, 2017 at 12:49 AM</a></span></div><p id="bc_0_5MC" class="comment-content">i need the video in the last project "Tracking two Triangles in a Video"</p><span id="bc_0_5MN" class="comment-actions secondary-text" kind="m"><a kind="i" href="javascript:;" target="_self" o="r">Reply</a><span class="item-control blog-admin pid-1155112695"><a o="d" target="_self" href="https://www.blogger.com/delete-comment.g?blogID=1182128440772477840&amp;postID=8831792691873463133">Delete</a></span></span></div><div id="bc_0_5BR" class="comment-replies"><span id="bc_0_5b+seedGhBD" kind="d"><div id="bc_0_4T" class="comment-thread inline-thread" kind="t" t="0" u="0"><span id="bc_0_4TT" class="thread-toggle thread-expanded" kind="g"><span id="bc_0_4TA" class="thread-arrow"></span><span id="bc_0_4TN" class="thread-count"><span id="bc_0_4TNT" style="display: none;"></span><span id="bc_0_4TNU" style="display: none;"></span><a href="javascript:;" target="_self">Replies</a><div id="bc_0_4TD" class="thread-dropContainer thread-expanded"><span class="thread-drop"></span></div></span></span><ol id="bc_0_4TC" class="thread-chrome thread-expanded"><div><li id="bc_0_4B" class="comment" kind="b"><div class="avatar-image-container"><img src="./video_files/photo(2).jpg"></div><div id="c9150046620829352231" class="comment-block"><div id="bc_0_4M" class="comment-header" kind="m"><cite class="user blog-author"><a rel="nofollow" href="https://www.blogger.com/profile/16983244554428216643">Shermal Fernando</a></cite><span class="icon user blog-author"></span><span class="datetime secondary-text"><a rel="nofollow" href="https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment=1510963345293#c9150046620829352231">November 18, 2017 at 5:32 AM</a></span></div><p id="bc_0_4MC" class="comment-content">Sorry Bassel, I don't have the video.</p><span id="bc_0_4MN" class="comment-actions secondary-text" kind="m"><span class="item-control blog-admin pid-1264073628"><a o="d" target="_self" href="https://www.blogger.com/delete-comment.g?blogID=1182128440772477840&amp;postID=9150046620829352231">Delete</a></span></span></div><div id="bc_0_4BR" class="comment-replies"></div><div id="bc_0_4B_box" class="comment-replybox-single"></div></li></div><div id="bc_0_4I" class="continue" kind="ci"><a href="javascript:;" target="_self">Reply</a></div></ol><div id="bc_0_4T_box" class="comment-replybox-thread"></div></div></span></div><div id="bc_0_5B_box" class="comment-replybox-single"></div></li><li id="bc_0_7B" class="comment" kind="b"><div class="avatar-image-container"><img src="./video_files/zFdxGE77vvD2w5xHy6jkVuElKv-U9_9qLkRYK8OnbDeJPtjSZ82UPq5w6hJ-SA=s35"></div><div id="c7576490452669652322" class="comment-block"><div id="bc_0_7M" class="comment-header" kind="m"><cite class="user"><a rel="nofollow" href="https://www.blogger.com/profile/01003829331380406474">ARSLiber</a></cite><span class="icon user"></span><span class="datetime secondary-text"><a rel="nofollow" href="https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment=1511583845164#c7576490452669652322">November 25, 2017 at 9:54 AM</a></span></div><p id="bc_0_7MC" class="comment-content">Great job! Congratulations!<br></p><span id="bc_0_7MN" class="comment-actions secondary-text" kind="m"><a kind="i" href="javascript:;" target="_self" o="r">Reply</a><span class="item-control blog-admin pid-1950045714"><a o="d" target="_self" href="https://www.blogger.com/delete-comment.g?blogID=1182128440772477840&amp;postID=7576490452669652322">Delete</a></span></span></div><div id="bc_0_7BR" class="comment-replies"><span id="bc_0_7b+seedGhDD" kind="d"><div id="bc_0_6T" class="comment-thread inline-thread" kind="t" t="0" u="0"><span id="bc_0_6TT" class="thread-toggle thread-expanded" kind="g"><span id="bc_0_6TA" class="thread-arrow"></span><span id="bc_0_6TN" class="thread-count"><span id="bc_0_6TNT" style="display: none;"></span><span id="bc_0_6TNU" style="display: none;"></span><a href="javascript:;" target="_self">Replies</a><div id="bc_0_6TD" class="thread-dropContainer thread-expanded"><span class="thread-drop"></span></div></span></span><ol id="bc_0_6TC" class="thread-chrome thread-expanded"><div><li id="bc_0_6B" class="comment" kind="b"><div class="avatar-image-container"><img src="./video_files/photo(2).jpg"></div><div id="c6818900935074947043" class="comment-block"><div id="bc_0_6M" class="comment-header" kind="m"><cite class="user blog-author"><a rel="nofollow" href="https://www.blogger.com/profile/16983244554428216643">Shermal Fernando</a></cite><span class="icon user blog-author"></span><span class="datetime secondary-text"><a rel="nofollow" href="https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment=1511742249332#c6818900935074947043">November 27, 2017 at 5:54 AM</a></span></div><p id="bc_0_6MC" class="comment-content">Thank you</p><span id="bc_0_6MN" class="comment-actions secondary-text" kind="m"><span class="item-control blog-admin pid-1264073628"><a o="d" target="_self" href="https://www.blogger.com/delete-comment.g?blogID=1182128440772477840&amp;postID=6818900935074947043">Delete</a></span></span></div><div id="bc_0_6BR" class="comment-replies"></div><div id="bc_0_6B_box" class="comment-replybox-single"></div></li></div><div id="bc_0_6I" class="continue" kind="ci"><a href="javascript:;" target="_self">Reply</a></div></ol><div id="bc_0_6T_box" class="comment-replybox-thread"></div></div></span></div><div id="bc_0_7B_box" class="comment-replybox-single"></div></li><li id="bc_0_9B" class="comment" kind="b"><div class="avatar-image-container"><img src="./video_files/photo(3).jpg"></div><div id="c4465806949742030371" class="comment-block"><div id="bc_0_9M" class="comment-header" kind="m"><cite class="user"><a rel="nofollow" href="https://www.blogger.com/profile/04933161225735950528">BRANDON EDEN GONZALEZ PLATA</a></cite><span class="icon user"></span><span class="datetime secondary-text"><a rel="nofollow" href="https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment=1516830951097#c4465806949742030371">January 25, 2018 at 3:25 AM</a></span></div><p id="bc_0_9MC" class="comment-content">hi, i have a question about this, i´m could track objets for his shape but in real time video? and i could detect if the object don´t have a correct position?. I´m very new in this so if could help me i would thank you </p><span id="bc_0_9MN" class="comment-actions secondary-text" kind="m"><a kind="i" href="javascript:;" target="_self" o="r">Reply</a><span class="item-control blog-admin pid-840506401"><a o="d" target="_self" href="https://www.blogger.com/delete-comment.g?blogID=1182128440772477840&amp;postID=4465806949742030371">Delete</a></span></span></div><div id="bc_0_9BR" class="comment-replies"><span id="bc_0_9b+seedGhFD" kind="d"><div id="bc_0_8T" class="comment-thread inline-thread" kind="t" t="0" u="0"><span id="bc_0_8TT" class="thread-toggle thread-expanded" kind="g"><span id="bc_0_8TA" class="thread-arrow"></span><span id="bc_0_8TN" class="thread-count"><span id="bc_0_8TNT" style="display: none;"></span><span id="bc_0_8TNU" style="display: none;"></span><a href="javascript:;" target="_self">Replies</a><div id="bc_0_8TD" class="thread-dropContainer thread-expanded"><span class="thread-drop"></span></div></span></span><ol id="bc_0_8TC" class="thread-chrome thread-expanded"><div><li id="bc_0_8B" class="comment" kind="b"><div class="avatar-image-container"><img src="./video_files/photo(2).jpg"></div><div id="c3530411530256465066" class="comment-block"><div id="bc_0_8M" class="comment-header" kind="m"><cite class="user blog-author"><a rel="nofollow" href="https://www.blogger.com/profile/16983244554428216643">Shermal Fernando</a></cite><span class="icon user blog-author"></span><span class="datetime secondary-text"><a rel="nofollow" href="https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment=1516924254421#c3530411530256465066">January 26, 2018 at 5:20 AM</a></span></div><p id="bc_0_8MC" class="comment-content">Yes, you can track objects in a video in a real time.</p><span id="bc_0_8MN" class="comment-actions secondary-text" kind="m"><span class="item-control blog-admin pid-1264073628"><a o="d" target="_self" href="https://www.blogger.com/delete-comment.g?blogID=1182128440772477840&amp;postID=3530411530256465066">Delete</a></span></span></div><div id="bc_0_8BR" class="comment-replies"></div><div id="bc_0_8B_box" class="comment-replybox-single"></div></li></div><div id="bc_0_8I" class="continue" kind="ci"><a href="javascript:;" target="_self">Reply</a></div></ol><div id="bc_0_8T_box" class="comment-replybox-thread"></div></div></span></div><div id="bc_0_9B_box" class="comment-replybox-single"></div></li><li id="bc_0_10B" class="comment" kind="b"><div class="avatar-image-container"><img src="./video_files/blank.gif"></div><div id="c9024627605734577841" class="comment-block"><div id="bc_0_10M" class="comment-header" kind="m"><cite class="user">Anonymous</cite><span class="icon user"></span><span class="datetime secondary-text"><a rel="nofollow" href="https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html?showComment=1520667741730#c9024627605734577841">March 10, 2018 at 1:12 PM</a></span></div><p id="bc_0_10MC" class="comment-content">I want to count the number of pixel inside contour. Can you help me?<br></p><span id="bc_0_10MN" class="comment-actions secondary-text" kind="m"><a kind="i" href="javascript:;" target="_self" o="r">Reply</a><span class="item-control blog-admin pid-323188942"><a o="d" target="_self" href="https://www.blogger.com/delete-comment.g?blogID=1182128440772477840&amp;postID=9024627605734577841">Delete</a></span></span></div><div id="bc_0_10BR" class="comment-replies"></div><div id="bc_0_10B_box" class="comment-replybox-single"></div></li></ol><div id="bc_0_11I" class="continue" kind="ci" style="display: none;"><a href="javascript:;" target="_self">Add comment</a></div><div id="bc_0_11T_box" class="comment-replybox-thread"><iframe allowtransparency="true" class="blogger-iframe-colorize blogger-comment-from-post" frameborder="0" height="192px" id="comment-editor" name="comment-editor" src="./video_files/comment-iframe.html" width="100%" data-resized="true" style="display: block;"></iframe></div><div id="bc_0_11L" class="loadmore loaded" kind="rb"><a href="javascript:;" target="_self">Load more...</a></div></div></div></div></div>
</div>
<p class="comment-footer">
</p><div class="comment-form">
<a name="comment-form"></a>
<p>
</p>
<a href="https://www.blogger.com/comment-iframe.g?blogID=1182128440772477840&amp;postID=6871903895490733007&amp;blogspotRpcToken=7511413" id="comment-editor-src"></a>

<script src="./video_files/2567313873-comment_from_post_iframe.js" type="text/javascript"></script>
<script type="text/javascript">
      BLOG_CMT_createIframe('https://www.blogger.com/rpc_relay.html');
    </script>
</div>
<p></p>
<div id="backlinks-container">
<div id="Blog1_backlinks-container">
</div>
</div>
</div>
</div>
<div class="inline-ad">
<script type="text/javascript">
    google_ad_client = "ca-pub-2548018011991689";
    google_ad_host = "ca-host-pub-1556223355139109";
    google_ad_host_channel = "L0007";
    google_ad_slot = "2242327335";
    google_ad_width = 728;
    google_ad_height = 90;
</script>
<!-- opencv-srf_main_Blog1_728x90_as -->
<script type="text/javascript" src="./video_files/show_ads.js">
</script><ins id="aswift_0_expand" style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><ins id="aswift_0_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent;"><iframe width="728" height="90" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left: 0px; position: absolute; top: 0px; width: 728px; height: 90px;" src="./video_files/saved_resource.html"></iframe></ins></ins>
</div>

        </div></div>
      
</div>
<div class="blog-pager" id="blog-pager">
<span id="blog-pager-newer-link">
<a class="blog-pager-newer-link" href="https://www.opencv-srf.com/2011/11/opencv-matlab-or-aforge.html" id="Blog1_blog-pager-newer-link" title="Newer Post">Newer Post</a>
</span>
<span id="blog-pager-older-link">
<a class="blog-pager-older-link" href="https://www.opencv-srf.com/2011/09/getting-started-with-opencv_16.html" id="Blog1_blog-pager-older-link" title="Older Post">Older Post</a>
</span>
<a class="home-link" href="https://www.opencv-srf.com/">Home</a>
</div>
<div class="clear"></div>
<div class="post-feeds">
<div class="feed-links">
Subscribe to:
<a class="feed-link" href="https://www.opencv-srf.com/feeds/6871903895490733007/comments/default" target="_blank" type="application/atom+xml">Post Comments (Atom)</a>
</div>
</div>
<script type="text/javascript">
    window.___gcfg = { 'lang': 'en' };
  </script>
</div></div>
</div>
</div>
<div class="column-left-outer">
<div class="column-left-inner">
<aside>
<div class="sidebar section" id="sidebar-left-1"><div class="widget HTML" data-version="1" id="HTML2">
<div class="widget-content">
<div>
<div><a href="https://www.opencv-srf.com/p/opencv-lessons.html"><b>OpenCV Lessons</b></a></div>
<div>&nbsp;</div>
<div>
<ul>
<li><a href="https://www.opencv-srf.com/2017/11/install-opencv-with-visual-studio.html">Install OpenCV with Visual Studio
</a></li><li><a href="https://www.opencv-srf.com/2017/11/opencv-cpp-api.html">OpenCV C++ API</a></li>
<li><a href="https://www.opencv-srf.com/2017/11/load-and-display-image.html">Load &amp; Display Image</a></li>
<li><a href="https://www.opencv-srf.com/2017/12/play-video-from-file-or-camera.html">Play Video from File or Camera</a></li>
<li><a href="https://www.opencv-srf.com/2018/01/save-images-and-videos-to-file.html">Save Images &amp; Videos to File</a></li>
<li><a href="https://www.opencv-srf.com/2018/02/change-brightness-of-images-and-videos.html">Change Brightness of Images and Videos</a></li>
<li><a href="https://www.opencv-srf.com/2018/02/change-contrast-of-images-and-videos.html">Change Contrast of Images and Videos</a></li>
<li><a href="https://www.opencv-srf.com/2018/02/histogram-equalization.html">Histogram Equalization</a></li>
<li><a href="https://www.opencv-srf.com/2018/01/filter-images-and-videos.html">Filter Images and Videos</a>
<ul>
<li><a href="https://www.opencv-srf.com/2018/03/homogeneous-blur.html">Homogeneous Blur</a></li>
<li><a href="https://www.opencv-srf.com/2018/03/gaussian-blur.html">Gaussian Blur</a></li>
<li><a href="https://www.opencv-srf.com/2018/01/invert-images-and-videos.html">Invert Images and Videos</a></li>
</ul>
</li>

<li><a>Morphological Operations</a>
<ul>
<li><a href="https://www.opencv-srf.com/2018/01/erode-images-and-videos.html">Erode Images and Videos</a></li>
<li><a href="https://www.opencv-srf.com/2018/01/dilate-images-and-videos.html">Dilate Images and Videos</a></li>
</ul>
</li>

<li><a href="https://www.opencv-srf.com/2011/11/track-bars.html">How to Add Trackbar</a></li>
<li><a href="https://www.opencv-srf.com/2011/11/mouse-events.html">How to Detect Mouse Clicks and Moves</a></li>
<li><a href="https://www.opencv-srf.com/2010/09/rotating-images.html">Rotate Image &amp; Video</a></li>
<li><a href="https://www.opencv-srf.com/2010/09/object-detection-using-color-seperation.html">Color Detection &amp; Object Tracking</a></li>
<li><a href="https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html">Shape Detection &amp;Tracking using Contours</a></li>
</ul>
</div>
<div>&nbsp;</div>
</div>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="https://www.blogger.com/rearrange?blogID=1182128440772477840&amp;widgetType=HTML&amp;widgetId=HTML2&amp;action=editWidget&amp;sectionId=sidebar-left-1" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;HTML2&quot;));" target="configHTML2" title="Edit">
<img alt="" height="18" src="./video_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div><div class="widget AdSense" data-version="1" id="AdSense1">
<div class="widget-content">
<script type="text/javascript">
    google_ad_client = "ca-pub-2548018011991689";
    google_ad_host = "ca-host-pub-1556223355139109";
    google_ad_host_channel = "L0001";
    google_ad_slot = "2211425797";
    google_ad_width = 300;
    google_ad_height = 250;
</script>
<!-- opencv-srf_sidebar-left-1_AdSense1_300x250_as -->
<script type="text/javascript" src="./video_files/show_ads.js">
</script><ins id="aswift_1_expand" style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent;"><iframe width="300" height="250" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left: 0px; position: absolute; top: 0px; width: 300px; height: 250px;" src="./video_files/saved_resource(1).html"></iframe></ins></ins>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="https://www.blogger.com/rearrange?blogID=1182128440772477840&amp;widgetType=AdSense&amp;widgetId=AdSense1&amp;action=editWidget&amp;sectionId=sidebar-left-1" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;AdSense1&quot;));" target="configAdSense1" title="Edit">
<img alt="" height="18" src="./video_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div>
</div><div class="widget BlogSearch" data-version="1" id="BlogSearch1">
<h2 class="title">Search This Blog</h2>
<div class="widget-content">
<div id="BlogSearch1_form">
<form action="https://www.opencv-srf.com/search" class="gsc-search-box" target="_top">
<table cellpadding="0" cellspacing="0" class="gsc-search-box">
<tbody>
<tr>
<td class="gsc-input">
<input autocomplete="off" class="gsc-input" name="q" size="10" title="search" type="text" value="">
</td>
<td class="gsc-search-button">
<input class="gsc-search-button" title="search" type="submit" value="Search">
</td>
</tr>
</tbody>
</table>
</form>
</div>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="https://www.blogger.com/rearrange?blogID=1182128440772477840&amp;widgetType=BlogSearch&amp;widgetId=BlogSearch1&amp;action=editWidget&amp;sectionId=sidebar-left-1" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;BlogSearch1&quot;));" target="configBlogSearch1" title="Edit">
<img alt="" height="18" src="./video_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div><div class="widget PlusFollowers" data-version="1" id="PlusFollowers1">
<h2 class="title">Google+ Followers</h2>
<div class="widget-content">
<div id="___plus_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 128px;"><iframe ng-non-bindable="" frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; height: 128px;" tabindex="0" vspace="0" width="100%" id="I2_1525836257217" name="I2_1525836257217" src="./video_files/followers.html" data-gapiattached="true" title="+1"></iframe></div>
<script type="text/javascript">
        window.___gcfg = {'lang': 'en'};
      </script>
</div>
</div><div class="widget PlusOne" data-version="1" id="PlusOne1">
<div class="widget-content">
<div id="___plusone_1" style="text-indent: 0px; margin: 0px; padding: 0px; background: transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 38px; height: 24px;"><iframe ng-non-bindable="" frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 38px; margin: 0px; border-style: none; left: 0px; height: 24px;" tabindex="0" vspace="0" width="100%" id="I1_1525836257214" name="I1_1525836257214" src="./video_files/fastbutton(1).html" data-gapiattached="true" title="G+"></iframe></div>
<script type="text/javascript">
      window.___gcfg = {"lang": "en"};
    </script>
</div>
</div><div class="widget HTML" data-version="1" id="HTML1">
<h2 class="title">Facebook Followers</h2>
<div class="widget-content">
<div class="fb-like fb_iframe_widget" data-href="https://www.facebook.com/pages/OpenCV-Tutorials/119912048136156" data-send="true" data-width="300" data-show-faces="true" fb-xfbml-state="rendered" fb-iframe-plugin-query="app_id=&amp;container_width=290&amp;href=https%3A%2F%2Fwww.facebook.com%2Fpages%2FOpenCV-Tutorials%2F119912048136156&amp;locale=en_GB&amp;sdk=joey&amp;send=true&amp;show_faces=true&amp;width=300"><span style="vertical-align: bottom; width: 300px; height: 32px;"><iframe name="f28ed4ce4dc4d" width="300px" height="1000px" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" allow="encrypted-media" title="fb:like Facebook Social Plugin" src="./video_files/like.html" style="border: none; width: 300px; height: 32px;" class=""></iframe></span></div>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="https://www.blogger.com/rearrange?blogID=1182128440772477840&amp;widgetType=HTML&amp;widgetId=HTML1&amp;action=editWidget&amp;sectionId=sidebar-left-1" onclick="return _WidgetManager._PopupConfig(document.getElementById(&quot;HTML1&quot;));" target="configHTML1" title="Edit">
<img alt="" height="18" src="./video_files/icon18_wrench_allbkg.png" width="18">
</a>
</span>
</span>
<div class="clear"></div>
</div></div>
</aside>
</div>
</div>
<div class="column-right-outer">
<div class="column-right-inner">
<aside>
</aside>
</div>
</div>
</div>
<div style="clear: both"></div>
<!-- columns -->
</div>
<!-- main -->
</div>
</div>
<div class="main-cap-bottom cap-bottom">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
</div>
<footer>
<div class="footer-outer">
<div class="footer-cap-top cap-top">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
<div class="fauxborder-left footer-fauxborder-left">
<div class="fauxborder-right footer-fauxborder-right"></div>
<div class="region-inner footer-inner">
<div class="foot no-items section" id="footer-1"></div>
<!-- outside of the include in order to lock Attribution widget -->
<div class="foot no-items section" id="footer-3"></div>
</div>
</div>
<div class="footer-cap-bottom cap-bottom">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
</div>
</footer>
<!-- content -->
</div>
</div>
<div class="content-cap-bottom cap-bottom">
<div class="cap-left"></div>
<div class="cap-right"></div>
</div>
</div>
</div>
<iframe id="google_osd_static_frame_6642062885383" name="google_osd_static_frame" style="display: none; width: 0px; height: 0px;" src="./video_files/saved_resource(2).html"></iframe><script type="text/javascript">
    window.setTimeout(function() {
        document.body.className = document.body.className.replace('loading', '');
      }, 10);
  </script>
<script src="./video_files/plusone.js" type="text/javascript" gapi_processed="true"></script>

<script type="text/javascript" src="./video_files/1550112130-widgets.js"></script>
<script type="text/javascript">
window['__wavt'] = 'AOuZoY7mdspu6O8-NFe2O8OS4ugHYWQ5pA:1525836256119';_WidgetManager._Init('//www.blogger.com/rearrange?blogID\x3d1182128440772477840','//www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html','1182128440772477840');
_WidgetManager._SetDataContext([{'name': 'blog', 'data': {'blogId': '1182128440772477840', 'title': 'OpenCV Tutorial C++', 'url': 'https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html', 'canonicalUrl': 'https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html', 'homepageUrl': 'https://www.opencv-srf.com/', 'searchUrl': 'https://www.opencv-srf.com/search', 'canonicalHomepageUrl': 'https://www.opencv-srf.com/', 'blogspotFaviconUrl': 'https://www.opencv-srf.com/favicon.ico', 'bloggerUrl': 'https://www.blogger.com', 'hasCustomDomain': true, 'httpsEnabled': true, 'enabledCommentProfileImages': true, 'gPlusViewType': 'FILTERED_POSTMOD', 'adultContent': false, 'analyticsAccountNumber': '', 'encoding': 'UTF-8', 'locale': 'en', 'localeUnderscoreDelimited': 'en', 'languageDirection': 'ltr', 'isPrivate': false, 'isMobile': false, 'isMobileRequest': false, 'mobileClass': '', 'isPrivateBlog': false, 'feedLinks': '\x3clink rel\x3d\x22alternate\x22 type\x3d\x22application/atom+xml\x22 title\x3d\x22OpenCV Tutorial C++ - Atom\x22 href\x3d\x22https://www.opencv-srf.com/feeds/posts/default\x22 /\x3e\n\x3clink rel\x3d\x22alternate\x22 type\x3d\x22application/rss+xml\x22 title\x3d\x22OpenCV Tutorial C++ - RSS\x22 href\x3d\x22https://www.opencv-srf.com/feeds/posts/default?alt\x3drss\x22 /\x3e\n\x3clink rel\x3d\x22service.post\x22 type\x3d\x22application/atom+xml\x22 title\x3d\x22OpenCV Tutorial C++ - Atom\x22 href\x3d\x22https://www.blogger.com/feeds/1182128440772477840/posts/default\x22 /\x3e\n\n\x3clink rel\x3d\x22alternate\x22 type\x3d\x22application/atom+xml\x22 title\x3d\x22OpenCV Tutorial C++ - Atom\x22 href\x3d\x22https://www.opencv-srf.com/feeds/6871903895490733007/comments/default\x22 /\x3e\n', 'meTag': '', 'openIdOpTag': '', 'adsenseClientId': 'ca-pub-2548018011991689', 'adsenseHostId': 'ca-host-pub-1556223355139109', 'adsenseHasAds': true, 'ieCssRetrofitLinks': '\x3c!--[if IE]\x3e\x3cscript type\x3d\x22text/javascript\x22 src\x3d\x22https://www.blogger.com/static/v1/jsbin/3658603751-ieretrofit.js\x22\x3e\x3c/script\x3e\n\x3c![endif]--\x3e', 'view': '', 'dynamicViewsCommentsSrc': '//www.blogblog.com/dynamicviews/4224c15c4e7c9321/js/comments.js', 'dynamicViewsScriptSrc': '//www.blogblog.com/dynamicviews/f735e31ac9a7f580', 'plusOneApiSrc': 'https://apis.google.com/js/plusone.js', 'sharing': {'platforms': [{'name': 'Get link', 'key': 'link', 'shareMessage': 'Get link', 'target': ''}, {'name': 'Facebook', 'key': 'facebook', 'shareMessage': 'Share to Facebook', 'target': 'facebook'}, {'name': 'BlogThis!', 'key': 'blogThis', 'shareMessage': 'BlogThis!', 'target': 'blog'}, {'name': 'Twitter', 'key': 'twitter', 'shareMessage': 'Share to Twitter', 'target': 'twitter'}, {'name': 'Pinterest', 'key': 'pinterest', 'shareMessage': 'Share to Pinterest', 'target': 'pinterest'}, {'name': 'Google+', 'key': 'googlePlus', 'shareMessage': 'Share to Google+', 'target': 'googleplus'}, {'name': 'Email', 'key': 'email', 'shareMessage': 'Email', 'target': 'email'}], 'googlePlusShareButtonWidth': 300, 'googlePlusBootstrap': '\x3cscript type\x3d\x22text/javascript\x22\x3ewindow.___gcfg \x3d {\x27lang\x27: \x27en\x27};\x3c/script\x3e'}, 'hasCustomJumpLinkMessage': false, 'jumpLinkMessage': 'Read more', 'pageType': 'item', 'postId': '6871903895490733007', 'postImageThumbnailUrl': 'http://4.bp.blogspot.com/-r36OpIdjPWE/UDPMJ2kPFZI/AAAAAAAAAPs/-eO4W_XeDo0/s72-c/FindingContours.png', 'postImageUrl': 'http://4.bp.blogspot.com/-r36OpIdjPWE/UDPMJ2kPFZI/AAAAAAAAAPs/-eO4W_XeDo0/s640/FindingContours.png', 'pageName': 'Shape Detection \x26 Tracking using Contours', 'pageTitle': 'OpenCV Tutorial C++: Shape Detection \x26 Tracking using Contours', 'metaDescription': ''}}, {'name': 'features', 'data': {'lazy_images': 'false', 'sharing_get_link_dialog': 'true', 'sharing_native': 'false'}}, {'name': 'messages', 'data': {'edit': 'Edit', 'linkCopiedToClipboard': 'Link copied to clipboard!', 'ok': 'Ok', 'postLink': 'Post Link'}}, {'name': 'template', 'data': {'name': 'custom', 'localizedName': 'Custom', 'isResponsive': false, 'isAlternateRendering': false, 'isCustom': true}}, {'name': 'view', 'data': {'classic': {'name': 'classic', 'url': '?view\x3dclassic'}, 'flipcard': {'name': 'flipcard', 'url': '?view\x3dflipcard'}, 'magazine': {'name': 'magazine', 'url': '?view\x3dmagazine'}, 'mosaic': {'name': 'mosaic', 'url': '?view\x3dmosaic'}, 'sidebar': {'name': 'sidebar', 'url': '?view\x3dsidebar'}, 'snapshot': {'name': 'snapshot', 'url': '?view\x3dsnapshot'}, 'timeslide': {'name': 'timeslide', 'url': '?view\x3dtimeslide'}, 'isMobile': false, 'title': 'Shape Detection \x26 Tracking using Contours', 'description': 'OpenCV Tutorials for beginners of image processing and computer vision. Learn basic concepts with lots of OpenCV C++ examples.', 'featuredImage': '//4.bp.blogspot.com/-r36OpIdjPWE/UDPMJ2kPFZI/AAAAAAAAAPs/-eO4W_XeDo0/s640/FindingContours.png', 'url': 'https://www.opencv-srf.com/2011/09/object-detection-tracking-using-contours.html', 'type': 'item', 'isSingleItem': true, 'isMultipleItems': false, 'isError': false, 'isPage': false, 'isPost': true, 'isHomepage': false, 'isArchive': false, 'isLabelSearch': false, 'postId': 6871903895490733007}}]);
_WidgetManager._RegisterWidget('_HeaderView', new _WidgetInfo('Header1', 'header', null, document.getElementById('Header1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_PageListView', new _WidgetInfo('PageList1', 'crosscol', null, document.getElementById('PageList1'), {'title': '', 'links': [{'isCurrentPage': false, 'href': 'https://www.opencv-srf.com/', 'title': 'Home'}, {'isCurrentPage': false, 'href': 'https://www.opencv-srf.com/p/opencv-lessons.html', 'id': '3709659619911179461', 'title': 'OpenCV Lessons'}, {'isCurrentPage': false, 'href': 'https://plus.google.com/+ShermalFernando', 'title': 'About me'}], 'mobile': false}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogView', new _WidgetInfo('Blog1', 'main', null, document.getElementById('Blog1'), {'cmtInteractionsEnabled': false, 'useNgc': false, 'lightboxEnabled': true, 'lightboxModuleUrl': 'https://www.blogger.com/static/v1/jsbin/293197839-lbx.js', 'lightboxCssUrl': 'https://www.blogger.com/static/v1/v-css/368954415-lightbox_bundle.css'}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML2', 'sidebar-left-1', null, document.getElementById('HTML2'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_AdSenseView', new _WidgetInfo('AdSense1', 'sidebar-left-1', null, document.getElementById('AdSense1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogSearchView', new _WidgetInfo('BlogSearch1', 'sidebar-left-1', null, document.getElementById('BlogSearch1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_PlusFollowersView', new _WidgetInfo('PlusFollowers1', 'sidebar-left-1', null, document.getElementById('PlusFollowers1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_PlusOneView', new _WidgetInfo('PlusOne1', 'sidebar-left-1', null, document.getElementById('PlusOne1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML1', 'sidebar-left-1', null, document.getElementById('HTML1'), {}, 'displayModeFull'));
</script>

<ins class="adsbygoogle adsbygoogle-noablate" data-adsbygoogle-status="done" style="display: none;"><ins id="aswift_2_expand" style="display:inline-table;border:none;height:NaNpx;margin:0;padding:0;position:relative;visibility:visible;width:NaNpx;background-color:transparent;"><ins id="aswift_2_anchor" style="display:block;border:none;height:NaNpx;margin:0;padding:0;position:relative;visibility:visible;width:NaNpx;background-color:transparent;"><iframe frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_2" name="aswift_2" style="left: 0px; position: absolute; top: 0px;" src="./video_files/saved_resource(3).html"></iframe></ins></ins></ins><iframe name="oauth2relay897653995" id="oauth2relay897653995" src="./video_files/postmessageRelay.html" tabindex="-1" aria-hidden="true" style="width: 1px; height: 1px; position: absolute; top: -100px;"></iframe><link type="text/css" rel="stylesheet" href="./video_files/368954415-lightbox_bundle.css"><script type="text/javascript" src="./video_files/293197839-lbx.js"></script></body></html>